{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "namePrefix": {
      "type": "string",
      "metadata": {
        "displayName": "Resource Group and Resource name prefix",
        "description": "Resource Group and Resource identifier. String to be used as prefix to all Resource Group and Resource names."
      }
    },
    "hubSubscriptionId": {
      "type": "string",
      "defaultValue": "[subscription().subscriptionId]",
      "metadata": {
        "displayName": "Hub Subscription Id",
        "description": "Hub Subscription Id."
      }
    },
    "hubName": {
      "type": "string",
      "defaultValue": "hub-shared",
      "metadata": {
        "displayName": "Hub Shared name",
        "description": "Hub Shared name."
      }
    },
    "spokeName": {
      "type": "string",
      "defaultValue": "spoke-workload",
      "metadata": {
        "displayName": "Spoke Workload name",
        "description": "Spoke Workload name."
      }
    },
    "vm-admin-username": {
      "type": "string",
      "defaultValue": "win-admin-user",
      "metadata": {
        "displayName": "App admin username",
        "description": "The local admin of the Windows app servers."
      }
    },
    "vm-names": {
      "type": "array",
      "defaultValue": [
        "vm1",
        "vm2"
      ],
      "metadata": {
        "description": "An Array of unique virtual machine names to deploy to the Virual Network. e.g \"vm1\",\"vm2\",\"vm3\",\"vm4\""
      }
    },
    "vm-subnets": {
      "type": "array",
      "defaultValue": [
        "workload-subnet",
        "workload-subnet"
      ],
      "metadata": {
        "description": "An Array of subnets into which each virtual machine will be deployed. They must match the vm order. e.g \"workload\",\"workload\",\"workload\",\"workload\""
      }
    },
    "logs-retention-in-days": {
      "type": "int",
      "defaultValue": 365,
      "minValue": 0,
      "maxValue": 365,
      "metadata": {
        "displayName": "Log retention in days",
        "description": "Specifies the number of days that logs will be kept for; a value of 0 will retain data indefinitely"
      }
    },
    "artifact-storage-account-uri": {
      "type": "string",
      "metadata": {
        "displayName": "URI location of the STIG scripts",
        "description": "URI to the location of the folder which contains /online/<stig-scripts> OR /offline/<stig-scripts>. This value must NOT include a trailing slash."
      }
    },
    "isOffline": {
      "type": "bool",
      "defaultValue": false
    },
    "noLogAnalytics": {
      "type": "bool",
      "defaultValue": true
    }
  },
  "variables": {
    "hub-deployment-prefix": "[toLower(concat(parameters('namePrefix'), '-', parameters('hubName')))]",
    "hub-resource-group-name": "[concat(variables('hub-deployment-prefix'), '-rg')]",
    "oms-workspace-name": "[concat(variables('hub-deployment-prefix'), '-log')]",
    "unique-string": "[uniqueString(concat('/subscriptions/', parameters('hubSubscriptionId')), concat(variables('hub-deployment-prefix')))]",
    "diagnostic-storage-account-prefix": "[concat(replace(variables('hub-deployment-prefix'), '-', ''), 'diag')]",
    "diagnostic-storage-account-name": "[toLower(substring(replace(concat(variables('diagnostic-storage-account-prefix'), variables('unique-string'), variables('unique-string')), '-', ''), 0, 23) )]",
    "deployment-prefix": "[toLower(concat(parameters('namePrefix'), '-', parameters('spokeName')))]",
    "vnet-name": "[concat(variables('deployment-prefix'), '-vnet')]",
    "virtualMachine-size": "Standard_DS2_v2",
    "win-server-2019-dsc-extension-filename": "WindowsServer2019Workgroup.ps1.zip",
    "required-modules-filename": "RequiredModules.ps1",
    "install-powershell-modules-script-extension-filename": "DownloadPowerShellModules.ps1",
    "dsc-setup-win2019": "DSCSetupWin2019"
  },
  "resources": [
    {
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "2016-04-30-preview",
      "location": "[resourceGroup().location]",
      "name": "[concat(variables('deployment-prefix'), '-', parameters('vm-names')[copyIndex()], '-as')]",
      "tags": {
        "displayName": "[concat(variables('deployment-prefix'), '-', parameters('vm-names')[copyIndex()], '-as')]"
      },
      "copy": {
        "count": "[length(parameters('vm-names'))]",
        "name": "asLoop"
      },
      "properties": {
        "platformFaultDomainCount": 2,
        "platformUpdateDomainCount": 5,
        "managed": true
      },
      "sku": {
        "name": "Aligned"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2017-09-01",
      "location": "[resourceGroup().location]",
      "name": "[concat(variables('deployment-prefix'), '-', parameters('vm-names')[copyIndex()], '-nic')]",
      "copy": {
        "count": "[length(parameters('vm-names'))]",
        "name": "nicLoop"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks',  variables('vnet-name')), '/subnets/', parameters('vm-subnets')[copyIndex('nicLoop')])]"
              },
              "applicationSecurityGroups": [
                {
                  "id": "[resourceId(parameters('hubSubscriptionId'), variables('hub-resource-group-name'), 'Microsoft.Network/applicationSecurityGroups', concat(variables('hub-deployment-prefix'), '-', 'workload-asg'))]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "name": "[concat(variables('deployment-prefix'), '-', parameters('vm-names')[copyIndex()])]",
      "dependsOn": [
        "asLoop",
        "nicLoop"
      ],
      "copy": {
        "count": "[length(parameters('vm-names'))]",
        "name": "vmDeployLoop"
      },
      "properties": {
        "mode": "Incremental",
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "virtualMachine-name-prefix": {
              "type": "string"
            },
            "availabilitySet-name": {
              "type": "string"
            },
            "extension-name": {
              "type": "string"
            },
            "virtualMachine-size": {
              "type": "string"
            },
            "app-admin-username": {
              "type": "string"
            },
            "app-admin-password": {
              "type": "securestring"
            },
            "uniqueString": {
              "type": "string"
            },
            "hub-subscription-id": {
              "type": "string"
            },
            "oms-workspace-resourceGroup": {
              "type": "string"
            },
            "diagnostic-storageAccount-name": {
              "type": "string"
            },
            "win-server-2019-dsc-extension-filename": {
              "type": "string"
            },
            "required-modules-filename": {
              "type": "string"
            },
            "install-powershell-modules-script-extension-filename": {
              "type": "string"
            },
            "dsc-setup-win2019": {
              "type": "string"
            },
            "artifact-storage-account-uri": {
              "type": "string"
            },
            "isOffline": {
              "type": "bool"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2017-03-30",
              "location": "[resourceGroup().location]",
              "name": "[parameters('virtualMachine-name-prefix')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [],
              "properties": {
                "availabilitySet": {
                  "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySet-name'))]"
                },
                "osProfile": {
                  "computerName": "[concat(parameters('extension-name'), '-vm')]",
                  "adminUsername": "[parameters('app-admin-username')]",
                  "adminPassword": "[parameters('app-admin-password')]"
                },
                "hardwareProfile": {
                  "vmSize": "[parameters('virtualMachine-size')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "2019-Datacenter",
                    "version": "latest"
                  },
                  "osDisk": {
                    "name": "[replace(toLower(substring(concat(parameters('virtualMachine-name-prefix'), 'osdisk', '-', replace(concat(parameters('uniqueString'), parameters('uniqueString')), '-', '')), 0, 40)), '-', '')]",
                    "osType": "Windows",
                    "createOption": "FromImage"
                  },
                  "dataDisks": [
                    {
                      "lun": 0,
                      "name": "[replace(toLower(substring(concat(parameters('virtualMachine-name-prefix'), 'datadisk', '-', replace(concat(parameters('uniqueString'), parameters('uniqueString')), '-', '')), 0, 40)), '-', '')]",
                      "diskSizeGB": 128,
                      "createOption": "Empty",
                      "caching": "ReadWrite",
                      "managedDisk": {
                        "storageAccountType": "Premium_LRS"
                      }
                    }
                  ]
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('virtualMachine-name-prefix'), '-nic'))]"
                    }
                  ]
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": true,
                    "storageUri": "[concat(reference(resourceId(parameters('hub-subscription-id'), parameters('oms-workspace-resourceGroup'), 'Microsoft.Storage/storageAccounts/', parameters('diagnostic-storageAccount-name')), '2016-12-01').primaryEndpoints.blob)]"
                  }
                }
              },
              "resources": [
                {
                  "type": "extensions",
                  "name": "install-powershell-modules",
                  "apiVersion": "2017-03-30",
                  "location": "[resourceGroup().location]",
                  "condition": "[not(parameters('isOffline'))]",
                  "dependsOn": [
                    "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine-name-prefix'))]"
                  ],
                  "properties": {
                    "publisher": "Microsoft.Compute",
                    "type": "CustomScriptExtension",
                    "typeHandlerVersion": "1.10",
                    "autoUpgradeMinorVersion": true,
                    "settings": {
                      "fileUris": [
                        "[concat(parameters('artifact-storage-account-uri'), '/', parameters('required-modules-filename'))]",
                        "[concat(parameters('artifact-storage-account-uri'), '/', parameters('install-powershell-modules-script-extension-filename'))]"
                      ],
                      "timestamp": 123456788,
                      "commandToExecute": "[concat('PowerShell -ExecutionPolicy Unrestricted -File ', parameters('install-powershell-modules-script-extension-filename'))]"
                    }
                  }
                },
                {
                  "type": "extensions",
                  "name": "[concat(parameters('dsc-setup-win2019'), '-online')]",
                  "apiVersion": "2017-03-30",
                  "location": "[resourceGroup().location]",
                  "condition": "[not(parameters('isOffline'))]",
                  "dependsOn": [
                    "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine-name-prefix'))]",
                    "[resourceId('Microsoft.Compute/virtualMachines/extensions', parameters('virtualMachine-name-prefix'), 'install-powershell-modules')]"
                  ],
                  "properties": {
                    "publisher": "Microsoft.Powershell",
                    "type": "DSC",
                    "typeHandlerVersion": "2.77",
                    "autoUpgradeMinorVersion": true,
                    "settings": {
                      "wmfVersion": "latest",
                      "configuration": {
                        "url": "[concat(parameters('artifact-storage-account-uri'), '/online/', parameters('win-server-2019-dsc-extension-filename'))]",
                        "script": "WindowsServer2019Workgroup.ps1",
                        "function": "WindowsServer2019Workgroup"
                      },
                      "configurationArguments": {
                        "IsOffline": "[parameters('isOffline')]"
                      }
                    }
                  }
                },
                {
                  "type": "extensions",
                  "name": "[concat(parameters('dsc-setup-win2019'), '-offline')]",
                  "apiVersion": "2017-03-30",
                  "location": "[resourceGroup().location]",
                  "condition": "[parameters('isOffline')]",
                  "dependsOn": [
                    "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine-name-prefix'))]"
                  ],
                  "properties": {
                    "publisher": "Microsoft.Powershell",
                    "type": "DSC",
                    "typeHandlerVersion": "2.77",
                    "autoUpgradeMinorVersion": true,
                    "settings": {
                      "wmfVersion": "latest",
                      "configuration": {
                        "url": "[concat(parameters('artifact-storage-account-uri'), '/offline/', parameters('win-server-2019-dsc-extension-filename'))]",
                        "script": "WindowsServer2019Workgroup.ps1",
                        "function": "WindowsServer2019Workgroup"
                      },
                      "configurationArguments": {
                        "IsOffline": "[parameters('isOffline')]"
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        "parameters": {
          "virtualMachine-name-prefix": {
            "value": "[concat(variables('deployment-prefix'), '-', parameters('vm-names')[copyIndex()])]"
          },
          "availabilitySet-name": {
            "value": "[concat(variables('deployment-prefix'), '-', parameters('vm-names')[copyIndex()], '-as')]"
          },
          "extension-name": {
            "value": "[parameters('vm-names')[copyIndex()]]"
          },
          "app-admin-username": {
            "value": "[parameters('vm-admin-username')]"
          },
          "app-admin-password": {
            "reference": {
              "keyVault": {
                "id": "[resourceId(parameters('hubSubscriptionId'), variables('hub-resource-group-name'), 'Microsoft.KeyVault/vaults', concat(variables('hub-deployment-prefix'), '-kv'))]"
              },
              "secretName": "app-windows-admin-user-password"
            }
          },
          "virtualMachine-size": {
            "value": "[variables('virtualMachine-size')]"
          },
          "hub-subscription-id": {
            "value": "[parameters('hubSubscriptionId')]"
          },
          "oms-workspace-resourceGroup": {
            "value": "[variables('hub-resource-group-name')]"
          },
          "uniqueString": {
            "value": "[variables('unique-string')]"
          },
          "diagnostic-storageAccount-name": {
            "value": "[variables('diagnostic-storage-account-name')]"
          },
          "win-server-2019-dsc-extension-filename": {
            "value": "[variables('win-server-2019-dsc-extension-filename')]"
          },
          "dsc-setup-win2019": {
            "value": "[variables('dsc-setup-win2019')]"
          },
          "artifact-storage-account-uri": {
            "value": "[parameters('artifact-storage-account-uri')]"
          },
          "isOffline": {
            "value": "[parameters('isOffline')]"
          },
          "required-modules-filename": {
            "value": "[variables('required-modules-filename')]"
          },
          "install-powershell-modules-script-extension-filename": {
            "value": "[variables('install-powershell-modules-script-extension-filename')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces/providers/diagnosticSettings",
      "apiVersion": "2017-05-01-preview",
      "name": "[concat(variables('deployment-prefix'), '-', parameters('vm-names')[copyIndex()], '-nic/Microsoft.Insights/service')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat(variables('deployment-prefix'), '-', parameters('vm-names')[copyIndex()], '-nic')]"
      ],
      "copy": {
        "count": "[length(parameters('vm-names'))]",
        "name": "insightsLoop"
      },
      "properties": {
        "storageAccountId": "[resourceId(parameters('hubSubscriptionId'), variables('hub-resource-group-name'), 'Microsoft.Storage/storageAccounts', variables('diagnostic-storage-account-name'))]",
        "workspaceId": "[if(parameters('noLogAnalytics'), json('null'), resourceId(parameters('hubSubscriptionId'), variables('hub-resource-group-name'), 'Microsoft.OperationalInsights/workspaces', variables('oms-workspace-name')))]",
        "metrics": [
          {
            "category": "AllMetrics",
            "timeGrain": null,
            "enabled": true,
            "retentionPolicy": {
              "enabled": true,
              "days": "[parameters('logs-retention-in-days')]"
            }
          }
        ]
      }
    }
  ],
  "outputs": {}
}