# Source: azure-service-operator/templates/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: azureoperator-system
---
# Source: azure-service-operator/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: azureoperatorsettings
  namespace: azureoperator-system
type: Opaque
data:
  AZURE_SUBSCRIPTION_ID: "$subscription"
  AZURE_TENANT_ID: "$tenantId"
  AZURE_CLOUD_ENV: "$azurePublicCloud"
  AZURE_CLIENT_ID: "$service_principal_application_id"
  AZURE_CLIENT_SECRET: "$service_principal_password"
---
# Source: azure-service-operator/templates/generated/apiextensions.k8s.io_v1beta1_customresourcedefinition_apimgmtapis.azure.microsoft.com.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: apimgmtapis.azure.microsoft.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.provisioned
    name: Provisioned
    type: string
  - JSONPath: .status.message
    name: Message
    type: string
  group: azure.microsoft.com
  names:
    kind: APIMgmtAPI
    listKind: APIMgmtAPIList
    plural: apimgmtapis
    singular: apimgmtapi
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: APIMgmtSpec defines the desired state of APIMgmt
          properties:
            apiId:
              type: string
            apiService:
              type: string
            location:
              type: string
            properties:
              properties:
                apiRevision:
                  description: APIRevision - Describes the Revision of the Api. If
                    no value is provided, default revision 1 is created
                  type: string
                apiRevisionDescription:
                  description: APIRevisionDescription - Description of the Api Revision.
                  type: string
                apiVersion:
                  description: APIVersion - Indicates the Version identifier of the
                    API if the API is versioned
                  type: string
                apiVersionDescription:
                  description: APIVersionDescription - Description of the Api Version.
                  type: string
                apiVersionSetId:
                  description: APIVersionSetID - A resource identifier for the related
                    ApiVersionSet.
                  type: string
                apiVersionSets:
                  description: APIVersionSet - APIVersionSetContractDetails an API
                    Version Set contains the common configuration for a set of API
                    versions.
                  properties:
                    description:
                      description: Description - Description of API Version Set.
                      type: string
                    id:
                      description: ID - Identifier for existing API Version Set. Omit
                        this value to create a new Version Set.
                      type: string
                    name:
                      description: Name - The display Name of the API Version Set.
                      type: string
                  type: object
                description:
                  description: Description - Description of the API. May include HTML
                    formatting tags.
                  type: string
                displayName:
                  description: DisplayName - API name. Must be 1 to 300 characters
                    long.
                  type: string
                format:
                  description: " Format - Format of the Content in which the API is
                    getting imported. Possible values include: \t'WadlXML', 'WadlLinkJSON',
                    'SwaggerJSON', 'SwaggerLinkJSON', 'Wsdl', 'WsdlLink', 'Openapi',
                    'Openapijson', 'OpenapiLink'"
                  type: string
                isCurrent:
                  description: IsCurrent - Indicates if API revision is current api
                    revision.
                  type: boolean
                isOnline:
                  description: IsOnline - READ-ONLY; Indicates if API revision is
                    accessible via the gateway.
                  type: boolean
                path:
                  description: " Path - Relative URL uniquely identifying this API
                    and all of its resource paths within the API Management service
                    instance. \tIt is appended to the API endpoint base URL specified
                    during the service instance creation to form a public URL for
                    this API."
                  type: string
                protocols:
                  description: Protocols - Describes on which protocols the operations
                    in this API can be invoked.
                  items:
                    type: string
                  type: array
                serviceUrl:
                  description: ServiceURL - Absolute URL of the backend service implementing
                    this API. Cannot be more than 2000 characters long.
                  type: string
                sourceApiId:
                  description: SourceAPIID - API identifier of the source API.
                  type: string
                subscriptionRequired:
                  description: SubscriptionRequired - Specifies whether an API or
                    Product subscription is required for accessing the API.
                  type: boolean
              type: object
            resourceGroup:
              type: string
          required:
          - apiId
          - apiService
          - location
          - properties
          - resourceGroup
          type: object
        status:
          description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
            state of resource actions
          properties:
            completed:
              format: date-time
              type: string
            containsUpdate:
              type: boolean
            failedProvisioning:
              type: boolean
            flattenedSecrets:
              type: boolean
            message:
              type: string
            pollingUrl:
              type: string
            provisioned:
              type: boolean
            provisioning:
              type: boolean
            requested:
              format: date-time
              type: string
            resourceId:
              type: string
            specHash:
              type: string
            state:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: azure-service-operator/templates/generated/apiextensions.k8s.io_v1beta1_customresourcedefinition_apimservices.azure.microsoft.com.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: apimservices.azure.microsoft.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.provisioned
    name: Provisioned
    type: string
  - JSONPath: .status.message
    name: Message
    type: string
  group: azure.microsoft.com
  names:
    kind: ApimService
    listKind: ApimServiceList
    plural: apimservices
    singular: apimservice
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: ApimService is the Schema for the apimservices API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ApimServiceSpec defines the desired state of ApimService
          properties:
            appInsightsName:
              type: string
            appInsightsResourceGroup:
              type: string
            location:
              type: string
            publisherEmail:
              type: string
            publisherName:
              type: string
            resourceGroup:
              type: string
            tier:
              description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                Important: Run "make" to regenerate code after modifying this file'
              type: string
            vnetName:
              type: string
            vnetResourceGroup:
              type: string
            vnetSubnetName:
              type: string
            vnetType:
              type: string
          required:
          - location
          - publisherEmail
          - publisherName
          - resourceGroup
          type: object
        status:
          description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
            state of resource actions
          properties:
            completed:
              format: date-time
              type: string
            containsUpdate:
              type: boolean
            failedProvisioning:
              type: boolean
            flattenedSecrets:
              type: boolean
            message:
              type: string
            pollingUrl:
              type: string
            provisioned:
              type: boolean
            provisioning:
              type: boolean
            requested:
              format: date-time
              type: string
            resourceId:
              type: string
            specHash:
              type: string
            state:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: azure-service-operator/templates/generated/apiextensions.k8s.io_v1beta1_customresourcedefinition_appinsights.azure.microsoft.com.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: appinsights.azure.microsoft.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.provisioned
    name: Provisioned
    type: string
  - JSONPath: .status.message
    name: Message
    type: string
  group: azure.microsoft.com
  names:
    kind: AppInsights
    listKind: AppInsightsList
    plural: appinsights
    singular: appinsights
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: AppInsights is the Schema for the appinsights API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: AppInsightsSpec defines the desired state of AppInsights
          properties:
            applicationType:
              type: string
            kind:
              type: string
            location:
              type: string
            resourceGroup:
              type: string
          required:
          - applicationType
          - kind
          - location
          type: object
        status:
          description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
            state of resource actions
          properties:
            completed:
              format: date-time
              type: string
            containsUpdate:
              type: boolean
            failedProvisioning:
              type: boolean
            flattenedSecrets:
              type: boolean
            message:
              type: string
            pollingUrl:
              type: string
            provisioned:
              type: boolean
            provisioning:
              type: boolean
            requested:
              format: date-time
              type: string
            resourceId:
              type: string
            specHash:
              type: string
            state:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: azure-service-operator/templates/generated/apiextensions.k8s.io_v1beta1_customresourcedefinition_azureloadbalancers.azure.microsoft.com.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: azureloadbalancers.azure.microsoft.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.provisioned
    name: Provisioned
    type: string
  - JSONPath: .status.message
    name: Message
    type: string
  group: azure.microsoft.com
  names:
    kind: AzureLoadBalancer
    listKind: AzureLoadBalancerList
    plural: azureloadbalancers
    singular: azureloadbalancer
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: AzureLoadBalancer is the Schema for the azureloadbalancers API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: AzureLoadBalancerSpec defines the desired state of AzureLoadBalancer
          properties:
            backendAddressPoolName:
              type: string
            backendPort:
              type: integer
            frontendPortRangeEnd:
              type: integer
            frontendPortRangeStart:
              type: integer
            inboundNatPoolName:
              type: string
            location:
              description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                Important: Run "make" to regenerate code after modifying this file'
              type: string
            publicIPAddressName:
              type: string
            resourceGroup:
              type: string
          required:
          - backendAddressPoolName
          - backendPort
          - frontendPortRangeEnd
          - frontendPortRangeStart
          - inboundNatPoolName
          - location
          - publicIPAddressName
          - resourceGroup
          type: object
        status:
          description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
            state of resource actions
          properties:
            completed:
              format: date-time
              type: string
            containsUpdate:
              type: boolean
            failedProvisioning:
              type: boolean
            flattenedSecrets:
              type: boolean
            message:
              type: string
            pollingUrl:
              type: string
            provisioned:
              type: boolean
            provisioning:
              type: boolean
            requested:
              format: date-time
              type: string
            resourceId:
              type: string
            specHash:
              type: string
            state:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: azure-service-operator/templates/generated/apiextensions.k8s.io_v1beta1_customresourcedefinition_azurenetworkinterfaces.azure.microsoft.com.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: azurenetworkinterfaces.azure.microsoft.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.provisioned
    name: Provisioned
    type: string
  - JSONPath: .status.message
    name: Message
    type: string
  group: azure.microsoft.com
  names:
    kind: AzureNetworkInterface
    listKind: AzureNetworkInterfaceList
    plural: azurenetworkinterfaces
    singular: azurenetworkinterface
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: AzureNetworkInterface is the Schema for the azurenetworkinterfaces
        API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: AzureNetworkInterfaceSpec defines the desired state of AzureNetworkInterface
          properties:
            location:
              description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                Important: Run "make" to regenerate code after modifying this file'
              type: string
            publicIPAddressName:
              type: string
            resourceGroup:
              type: string
            subnetName:
              type: string
            vnetName:
              type: string
          required:
          - location
          - publicIPAddressName
          - resourceGroup
          - subnetName
          - vnetName
          type: object
        status:
          description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
            state of resource actions
          properties:
            completed:
              format: date-time
              type: string
            containsUpdate:
              type: boolean
            failedProvisioning:
              type: boolean
            flattenedSecrets:
              type: boolean
            message:
              type: string
            pollingUrl:
              type: string
            provisioned:
              type: boolean
            provisioning:
              type: boolean
            requested:
              format: date-time
              type: string
            resourceId:
              type: string
            specHash:
              type: string
            state:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: azure-service-operator/templates/generated/apiextensions.k8s.io_v1beta1_customresourcedefinition_azurepublicipaddresses.azure.microsoft.com.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: azurepublicipaddresses.azure.microsoft.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.provisioned
    name: Provisioned
    type: string
  - JSONPath: .status.message
    name: Message
    type: string
  group: azure.microsoft.com
  names:
    kind: AzurePublicIPAddress
    listKind: AzurePublicIPAddressList
    plural: azurepublicipaddresses
    singular: azurepublicipaddress
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: AzurePublicIPAddress is the Schema for the azurepublicipaddresses
        API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: AzurePublicIPAddressSpec defines the desired state of AzurePublicIPAddress
          properties:
            idleTimeoutInMinutes:
              type: integer
            location:
              description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                Important: Run "make" to regenerate code after modifying this file'
              type: string
            publicIPAddressVersion:
              type: string
            publicIPAllocationMethod:
              type: string
            resourceGroup:
              type: string
            skuName:
              type: string
          required:
          - idleTimeoutInMinutes
          - location
          - publicIPAddressVersion
          - publicIPAllocationMethod
          - resourceGroup
          - skuName
          type: object
        status:
          description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
            state of resource actions
          properties:
            completed:
              format: date-time
              type: string
            containsUpdate:
              type: boolean
            failedProvisioning:
              type: boolean
            flattenedSecrets:
              type: boolean
            message:
              type: string
            pollingUrl:
              type: string
            provisioned:
              type: boolean
            provisioning:
              type: boolean
            requested:
              format: date-time
              type: string
            resourceId:
              type: string
            specHash:
              type: string
            state:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: azure-service-operator/templates/generated/apiextensions.k8s.io_v1beta1_customresourcedefinition_azuresqlactions.azure.microsoft.com.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: azuresqlactions.azure.microsoft.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.provisioned
    name: Provisioned
    type: string
  - JSONPath: .status.message
    name: Message
    type: string
  group: azure.microsoft.com
  names:
    kind: AzureSqlAction
    listKind: AzureSqlActionList
    plural: azuresqlactions
    singular: azuresqlaction
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: AzureSqlAction is the Schema for the azuresqlactions API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: AzureSqlActionSpec defines the desired state of AzureSqlAction
          properties:
            actionName:
              type: string
            dbName:
              type: string
            dbUser:
              type: string
            resourceGroup:
              description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                Important: Run "make" to regenerate code after modifying this file'
              type: string
            serverAdminSecretName:
              type: string
            serverName:
              type: string
            serverSecretKeyVault:
              type: string
            userSecretKeyVault:
              type: string
          required:
          - actionName
          - resourceGroup
          - serverName
          type: object
        status:
          description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
            state of resource actions
          properties:
            completed:
              format: date-time
              type: string
            containsUpdate:
              type: boolean
            failedProvisioning:
              type: boolean
            flattenedSecrets:
              type: boolean
            message:
              type: string
            pollingUrl:
              type: string
            provisioned:
              type: boolean
            provisioning:
              type: boolean
            requested:
              format: date-time
              type: string
            resourceId:
              type: string
            specHash:
              type: string
            state:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: azure-service-operator/templates/generated/apiextensions.k8s.io_v1beta1_customresourcedefinition_azuresqldatabases.azure.microsoft.com.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: azureoperator-system/azureoperator-serving-cert
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: azuresqldatabases.azure.microsoft.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.provisioned
    name: Provisioned
    type: string
  - JSONPath: .status.message
    name: Message
    type: string
  conversion:
    strategy: Webhook
    webhookClientConfig:
      caBundle: Cg==
      service:
        name: azureoperator-webhook-service
        namespace: azureoperator-system
        path: /convert
  group: azure.microsoft.com
  names:
    kind: AzureSqlDatabase
    listKind: AzureSqlDatabaseList
    plural: azuresqldatabases
    singular: azuresqldatabase
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  version: v1alpha1
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AzureSqlDatabase is the Schema for the azuresqldatabases API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureSqlDatabaseSpec defines the desired state of AzureSqlDatabase
            properties:
              dbName:
                description: optional
                type: string
              edition:
                description: 'DBEdition - wraps: https://godoc.org/github.com/Azure/azure-sdk-for-go/services/preview/sql/mgmt/2015-05-01-preview/sql#DatabaseEdition'
                type: integer
              location:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                type: string
              resourcegroup:
                type: string
              server:
                type: string
            required:
            - edition
            - location
            - server
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              pollingUrl:
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: false
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: AzureSqlDatabase is the Schema for the azuresqldatabases API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureSqlDatabaseSpec defines the desired state of AzureSqlDatabase
            properties:
              dbName:
                description: optional
                type: string
              edition:
                type: integer
              location:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                type: string
              resourceGroup:
                type: string
              server:
                type: string
            required:
            - edition
            - location
            - server
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              pollingUrl:
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: azure-service-operator/templates/generated/apiextensions.k8s.io_v1beta1_customresourcedefinition_azuresqlfailovergroups.azure.microsoft.com.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: azureoperator-system/azureoperator-serving-cert
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: azuresqlfailovergroups.azure.microsoft.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.provisioned
    name: Provisioned
    type: string
  - JSONPath: .status.message
    name: Message
    type: string
  conversion:
    strategy: Webhook
    webhookClientConfig:
      caBundle: Cg==
      service:
        name: azureoperator-webhook-service
        namespace: azureoperator-system
        path: /convert
  group: azure.microsoft.com
  names:
    kind: AzureSqlFailoverGroup
    listKind: AzureSqlFailoverGroupList
    plural: azuresqlfailovergroups
    singular: azuresqlfailovergroup
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  version: v1alpha1
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AzureSqlFailoverGroup is the Schema for the azuresqlfailovergroups
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureSqlFailoverGroupSpec defines the desired state of AzureSqlFailoverGroup
            properties:
              databaselist:
                items:
                  type: string
                type: array
              failovergraceperiod:
                format: int32
                type: integer
              failoverpolicy:
                description: ReadWriteEndpointFailoverPolicy - wraps https://godoc.org/github.com/Azure/azure-sdk-for-go/services/preview/sql/mgmt/2015-05-01-preview/sql#ReadWriteEndpointFailoverPolicy
                type: string
              keyVaultToStoreSecrets:
                type: string
              location:
                description: 'Important: Run "make" to regenerate code after modifying
                  this file'
                type: string
              resourcegroup:
                type: string
              secondaryserver:
                type: string
              secondaryserverresourcegroup:
                type: string
              server:
                type: string
            required:
            - databaselist
            - failovergraceperiod
            - failoverpolicy
            - location
            - secondaryserver
            - secondaryserverresourcegroup
            - server
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              pollingUrl:
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: false
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: AzureSqlFailoverGroup is the Schema for the azuresqlfailovergroups
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureSqlFailoverGroupSpec defines the desired state of AzureSqlFailoverGroup
            properties:
              databaseList:
                items:
                  type: string
                type: array
              failoverGracePeriod:
                format: int32
                type: integer
              failoverPolicy:
                description: 'NOTE: json tags are required.  Any new fields you add
                  must have json tags for the fields to be serialized.'
                type: string
              keyVaultToStoreSecrets:
                type: string
              location:
                description: 'Important: Run "make" to regenerate code after modifying
                  this file'
                type: string
              resourceGroup:
                type: string
              secondaryServer:
                type: string
              secondaryServerResourceGroup:
                type: string
              server:
                type: string
            required:
            - databaseList
            - failoverGracePeriod
            - failoverPolicy
            - location
            - secondaryServer
            - secondaryServerResourceGroup
            - server
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              pollingUrl:
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: azure-service-operator/templates/generated/apiextensions.k8s.io_v1beta1_customresourcedefinition_azuresqlfirewallrules.azure.microsoft.com.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: azureoperator-system/azureoperator-serving-cert
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: azuresqlfirewallrules.azure.microsoft.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.provisioned
    name: Provisioned
    type: string
  - JSONPath: .status.message
    name: Message
    type: string
  conversion:
    strategy: Webhook
    webhookClientConfig:
      caBundle: Cg==
      service:
        name: azureoperator-webhook-service
        namespace: azureoperator-system
        path: /convert
  group: azure.microsoft.com
  names:
    kind: AzureSqlFirewallRule
    listKind: AzureSqlFirewallRuleList
    plural: azuresqlfirewallrules
    singular: azuresqlfirewallrule
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  version: v1alpha1
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AzureSqlFirewallRule is the Schema for the azuresqlfirewallrules
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureSqlFirewallRuleSpec defines the desired state of AzureSqlFirewallRule
            properties:
              endipaddress:
                type: string
              resourcegroup:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                type: string
              server:
                type: string
              startipaddress:
                type: string
            required:
            - server
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              pollingUrl:
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: false
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: AzureSqlFirewallRule is the Schema for the azuresqlfirewallrules
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureSqlFirewallRuleSpec defines the desired state of AzureSqlFirewallRule
            properties:
              endIpAddress:
                type: string
              resourceGroup:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                type: string
              server:
                type: string
              startIpAddress:
                type: string
            required:
            - server
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              pollingUrl:
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: azure-service-operator/templates/generated/apiextensions.k8s.io_v1beta1_customresourcedefinition_azuresqlmanagedusers.azure.microsoft.com.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: azuresqlmanagedusers.azure.microsoft.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.provisioned
    name: Provisioned
    type: string
  - JSONPath: .status.message
    name: Message
    type: string
  group: azure.microsoft.com
  names:
    kind: AzureSQLManagedUser
    listKind: AzureSQLManagedUserList
    plural: azuresqlmanagedusers
    singular: azuresqlmanageduser
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: AzureSQLManagedUser is the Schema for the azuresqlmanagedusers
        API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: AzureSQLManagedUserSpec defines the desired state of AzureSQLManagedUser
          properties:
            dbName:
              type: string
            keyVaultSecretPrefix:
              type: string
            keyVaultToStoreSecrets:
              type: string
            managedIdentityClientId:
              type: string
            managedIdentityName:
              type: string
            resourceGroup:
              type: string
            roles:
              items:
                type: string
              type: array
            server:
              description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                Important: Run "make" to regenerate code after modifying this file'
              type: string
          required:
          - dbName
          - managedIdentityClientId
          - roles
          - server
          type: object
        status:
          description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
            state of resource actions
          properties:
            completed:
              format: date-time
              type: string
            containsUpdate:
              type: boolean
            failedProvisioning:
              type: boolean
            flattenedSecrets:
              type: boolean
            message:
              type: string
            pollingUrl:
              type: string
            provisioned:
              type: boolean
            provisioning:
              type: boolean
            requested:
              format: date-time
              type: string
            resourceId:
              type: string
            specHash:
              type: string
            state:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: azure-service-operator/templates/generated/apiextensions.k8s.io_v1beta1_customresourcedefinition_azuresqlservers.azure.microsoft.com.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: azureoperator-system/azureoperator-serving-cert
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: azuresqlservers.azure.microsoft.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.provisioned
    name: Provisioned
    type: string
  - JSONPath: .status.message
    name: Message
    type: string
  conversion:
    strategy: Webhook
    webhookClientConfig:
      caBundle: Cg==
      service:
        name: azureoperator-webhook-service
        namespace: azureoperator-system
        path: /convert
  group: azure.microsoft.com
  names:
    kind: AzureSqlServer
    listKind: AzureSqlServerList
    plural: azuresqlservers
    singular: azuresqlserver
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  version: v1alpha1
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AzureSqlServer is the Schema for the azuresqlservers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureSqlServerSpec defines the desired state of AzureSqlServer
            properties:
              keyVaultToStoreSecrets:
                type: string
              location:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                type: string
              resourcegroup:
                type: string
            required:
            - location
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              pollingUrl:
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: false
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: AzureSqlServer is the Schema for the azuresqlservers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureSqlServerSpec defines the desired state of AzureSqlServer
            properties:
              keyVaultToStoreSecrets:
                type: string
              location:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                type: string
              resourceGroup:
                type: string
            required:
            - location
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              pollingUrl:
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: azure-service-operator/templates/generated/apiextensions.k8s.io_v1beta1_customresourcedefinition_azuresqlusers.azure.microsoft.com.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: azuresqlusers.azure.microsoft.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.provisioned
    name: Provisioned
    type: string
  - JSONPath: .status.message
    name: Message
    type: string
  group: azure.microsoft.com
  names:
    kind: AzureSQLUser
    listKind: AzureSQLUserList
    plural: azuresqlusers
    singular: azuresqluser
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: AzureSQLUser is the Schema for the sqlusers API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: AzureSQLUserSpec defines the desired state of SqlUser
          properties:
            adminSecret:
              description: optional
              type: string
            adminSecretKeyVault:
              type: string
            dbName:
              type: string
            keyVaultSecretFormats:
              items:
                type: string
              type: array
            keyVaultSecretPrefix:
              type: string
            keyVaultToStoreSecrets:
              type: string
            resourceGroup:
              type: string
            roles:
              items:
                type: string
              type: array
            server:
              description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                Important: Run "make" to regenerate code after modifying this file'
              type: string
            username:
              type: string
          required:
          - dbName
          - roles
          - server
          type: object
        status:
          description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
            state of resource actions
          properties:
            completed:
              format: date-time
              type: string
            containsUpdate:
              type: boolean
            failedProvisioning:
              type: boolean
            flattenedSecrets:
              type: boolean
            message:
              type: string
            pollingUrl:
              type: string
            provisioned:
              type: boolean
            provisioning:
              type: boolean
            requested:
              format: date-time
              type: string
            resourceId:
              type: string
            specHash:
              type: string
            state:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: azure-service-operator/templates/generated/apiextensions.k8s.io_v1beta1_customresourcedefinition_azuresqlvnetrules.azure.microsoft.com.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: azuresqlvnetrules.azure.microsoft.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.provisioned
    name: Provisioned
    type: string
  - JSONPath: .status.message
    name: Message
    type: string
  group: azure.microsoft.com
  names:
    kind: AzureSQLVNetRule
    listKind: AzureSQLVNetRuleList
    plural: azuresqlvnetrules
    singular: azuresqlvnetrule
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: AzureSQLVNetRule is the Schema for the azuresqlvnetrules API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: 'NOTE: json tags are required.  Any new fields you add must
            have json tags for the fields to be serialized. AzureSQLVNetRuleSpec defines
            the desired state of AzureSQLVNetRule'
          properties:
            ignoreMissingServiceEndpoint:
              type: boolean
            resourceGroup:
              description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                Important: Run "make" to regenerate code after modifying this file'
              type: string
            server:
              type: string
            subnetName:
              type: string
            vNetName:
              type: string
            vNetResourceGroup:
              type: string
          required:
          - resourceGroup
          - server
          - subnetName
          - vNetName
          - vNetResourceGroup
          type: object
        status:
          description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
            state of resource actions
          properties:
            completed:
              format: date-time
              type: string
            containsUpdate:
              type: boolean
            failedProvisioning:
              type: boolean
            flattenedSecrets:
              type: boolean
            message:
              type: string
            pollingUrl:
              type: string
            provisioned:
              type: boolean
            provisioning:
              type: boolean
            requested:
              format: date-time
              type: string
            resourceId:
              type: string
            specHash:
              type: string
            state:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: azure-service-operator/templates/generated/apiextensions.k8s.io_v1beta1_customresourcedefinition_azurevirtualmachineextensions.azure.microsoft.com.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: azurevirtualmachineextensions.azure.microsoft.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.provisioned
    name: Provisioned
    type: string
  - JSONPath: .status.message
    name: Message
    type: string
  group: azure.microsoft.com
  names:
    kind: AzureVirtualMachineExtension
    listKind: AzureVirtualMachineExtensionList
    plural: azurevirtualmachineextensions
    shortNames:
    - vmext
    singular: azurevirtualmachineextension
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: AzureVirtualMachineExtension is the Schema for the azurevirtualmachineextensions
        API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: AzureVirtualMachineExtensionSpec defines the desired state
            of AzureVirtualMachineExtension
          properties:
            autoUpgradeMinorVersion:
              type: boolean
            forceUpdateTag:
              type: string
            location:
              description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                Important: Run "make" to regenerate code after modifying this file'
              type: string
            protectedSettings:
              type: string
            publisher:
              type: string
            resourceGroup:
              type: string
            settings:
              type: string
            typeHandlerVersion:
              type: string
            typeName:
              type: string
            vmName:
              type: string
          required:
          - autoUpgradeMinorVersion
          - forceUpdateTag
          - location
          - publisher
          - resourceGroup
          - typeHandlerVersion
          - typeName
          - vmName
          type: object
        status:
          description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
            state of resource actions
          properties:
            completed:
              format: date-time
              type: string
            containsUpdate:
              type: boolean
            failedProvisioning:
              type: boolean
            flattenedSecrets:
              type: boolean
            message:
              type: string
            pollingUrl:
              type: string
            provisioned:
              type: boolean
            provisioning:
              type: boolean
            requested:
              format: date-time
              type: string
            resourceId:
              type: string
            specHash:
              type: string
            state:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: azure-service-operator/templates/generated/apiextensions.k8s.io_v1beta1_customresourcedefinition_azurevirtualmachines.azure.microsoft.com.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: azurevirtualmachines.azure.microsoft.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.provisioned
    name: Provisioned
    type: string
  - JSONPath: .status.message
    name: Message
    type: string
  group: azure.microsoft.com
  names:
    kind: AzureVirtualMachine
    listKind: AzureVirtualMachineList
    plural: azurevirtualmachines
    singular: azurevirtualmachine
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: AzureVirtualMachine is the Schema for the azurevirtualmachines
        API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: AzureVirtualMachineSpec defines the desired state of AzureVirtualMachine
          properties:
            adminUserName:
              type: string
            location:
              description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                Important: Run "make" to regenerate code after modifying this file'
              type: string
            networkInterfaceName:
              type: string
            osType:
              type: string
            platformImageURN:
              type: string
            resourceGroup:
              type: string
            sshPublicKeyData:
              type: string
            vmSize:
              type: string
          required:
          - adminUserName
          - location
          - networkInterfaceName
          - osType
          - platformImageURN
          - resourceGroup
          - vmSize
          type: object
        status:
          description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
            state of resource actions
          properties:
            completed:
              format: date-time
              type: string
            containsUpdate:
              type: boolean
            failedProvisioning:
              type: boolean
            flattenedSecrets:
              type: boolean
            message:
              type: string
            pollingUrl:
              type: string
            provisioned:
              type: boolean
            provisioning:
              type: boolean
            requested:
              format: date-time
              type: string
            resourceId:
              type: string
            specHash:
              type: string
            state:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: azure-service-operator/templates/generated/apiextensions.k8s.io_v1beta1_customresourcedefinition_azurevmscalesets.azure.microsoft.com.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: azurevmscalesets.azure.microsoft.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.provisioned
    name: Provisioned
    type: string
  - JSONPath: .status.message
    name: Message
    type: string
  group: azure.microsoft.com
  names:
    kind: AzureVMScaleSet
    listKind: AzureVMScaleSetList
    plural: azurevmscalesets
    singular: azurevmscaleset
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: AzureVMScaleSet is the Schema for the azurevmscalesets API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: AzureVMScaleSetSpec defines the desired state of AzureVMScaleSet
          properties:
            adminUserName:
              type: string
            backendAddressPoolName:
              type: string
            capacity:
              type: integer
            inboundNatPoolName:
              type: string
            loadBalancerName:
              type: string
            location:
              description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                Important: Run "make" to regenerate code after modifying this file'
              type: string
            osType:
              type: string
            platformImageURN:
              type: string
            resourceGroup:
              type: string
            sshPublicKeyData:
              type: string
            subnetName:
              type: string
            virtualNetworkName:
              type: string
            vmSize:
              type: string
          required:
          - adminUserName
          - backendAddressPoolName
          - capacity
          - inboundNatPoolName
          - loadBalancerName
          - location
          - osType
          - platformImageURN
          - resourceGroup
          - subnetName
          - virtualNetworkName
          - vmSize
          type: object
        status:
          description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
            state of resource actions
          properties:
            completed:
              format: date-time
              type: string
            containsUpdate:
              type: boolean
            failedProvisioning:
              type: boolean
            flattenedSecrets:
              type: boolean
            message:
              type: string
            pollingUrl:
              type: string
            provisioned:
              type: boolean
            provisioning:
              type: boolean
            requested:
              format: date-time
              type: string
            resourceId:
              type: string
            specHash:
              type: string
            state:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: azure-service-operator/templates/generated/apiextensions.k8s.io_v1beta1_customresourcedefinition_blobcontainers.azure.microsoft.com.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: azureoperator-system/azureoperator-serving-cert
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: blobcontainers.azure.microsoft.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.provisioned
    name: Provisioned
    type: string
  - JSONPath: .status.message
    name: Message
    type: string
  conversion:
    strategy: Webhook
    webhookClientConfig:
      caBundle: Cg==
      service:
        name: azureoperator-webhook-service
        namespace: azureoperator-system
        path: /convert
  group: azure.microsoft.com
  names:
    kind: BlobContainer
    listKind: BlobContainerList
    plural: blobcontainers
    singular: blobcontainer
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  version: v1alpha1
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: BlobContainer is the Schema for the blobcontainers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BlobContainerSpec defines the desired state of BlobContainer
            properties:
              accesslevel:
                description: PublicAccess enumerates the values for public access.
                type: string
              accountname:
                type: string
              location:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                type: string
              resourcegroup:
                type: string
            required:
            - location
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              pollingUrl:
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: false
  - name: v1alpha2
    schema:
      openAPIV3Schema:
        description: BlobContainer is the Schema for the blobcontainers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BlobContainerSpec defines the desired state of BlobContainer
            properties:
              accessLevel:
                description: PublicAccess enumerates the values for public access.
                type: string
              accountName:
                type: string
              location:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                type: string
              resourceGroup:
                type: string
            required:
            - location
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              pollingUrl:
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: azure-service-operator/templates/generated/apiextensions.k8s.io_v1beta1_customresourcedefinition_consumergroups.azure.microsoft.com.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: consumergroups.azure.microsoft.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.provisioned
    name: Provisioned
    type: string
  - JSONPath: .status.message
    name: Message
    type: string
  group: azure.microsoft.com
  names:
    kind: ConsumerGroup
    listKind: ConsumerGroupList
    plural: consumergroups
    singular: consumergroup
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: ConsumerGroup is the Schema for the consumergroups API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ConsumerGroupSpec defines the desired state of ConsumerGroup
          properties:
            consumerGroupName:
              type: string
            eventHub:
              type: string
            namespace:
              type: string
            resourceGroup:
              description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                Important: Run "make" to regenerate code after modifying this file'
              type: string
          type: object
        status:
          description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
            state of resource actions
          properties:
            completed:
              format: date-time
              type: string
            containsUpdate:
              type: boolean
            failedProvisioning:
              type: boolean
            flattenedSecrets:
              type: boolean
            message:
              type: string
            pollingUrl:
              type: string
            provisioned:
              type: boolean
            provisioning:
              type: boolean
            requested:
              format: date-time
              type: string
            resourceId:
              type: string
            specHash:
              type: string
            state:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: azure-service-operator/templates/generated/apiextensions.k8s.io_v1beta1_customresourcedefinition_cosmosdbs.azure.microsoft.com.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: cosmosdbs.azure.microsoft.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.provisioned
    name: Provisioned
    type: string
  - JSONPath: .status.message
    name: Message
    type: string
  group: azure.microsoft.com
  names:
    kind: CosmosDB
    listKind: CosmosDBList
    plural: cosmosdbs
    singular: cosmosdb
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: CosmosDB is the Schema for the cosmosdbs API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: CosmosDBSpec defines the desired state of CosmosDB
          properties:
            ipRules:
              items:
                type: string
              type: array
            keyVaultToStoreSecrets:
              type: string
            kind:
              description: CosmosDBKind enumerates the values for kind. Only one of
                the following kinds may be specified. If none of the following kinds
                is specified, the default one is GlobalDocumentDBKind.
              enum:
              - GlobalDocumentDB
              - MongoDB
              type: string
            location:
              minLength: 0
              type: string
            locations:
              items:
                description: CosmosDBLocation defines one or more locations for geo-redundancy
                  and high availability
                properties:
                  failoverPriority:
                    format: int32
                    type: integer
                  isZoneRedundant:
                    type: boolean
                  locationName:
                    type: string
                required:
                - failoverPriority
                - locationName
                type: object
              type: array
            properties:
              description: CosmosDBProperties the CosmosDBProperties of CosmosDB.
              properties:
                capabilities:
                  items:
                    description: Capability cosmos DB capability object
                    properties:
                      name:
                        description: Name *CosmosCapability `json:"name,omitempty"`
                        enum:
                        - EnableCassandra
                        - EnableTable
                        - EnableGremlin
                        - EnableMongo
                        type: string
                    type: object
                  type: array
                databaseAccountOfferType:
                  description: DatabaseAccountOfferType - The offer type for the Cosmos
                    DB database account.
                  enum:
                  - Standard
                  type: string
                enableMultipleWriteLocations:
                  type: boolean
                isVirtualNetworkFilterEnabled:
                  description: IsVirtualNetworkFilterEnabled - Flag to indicate whether
                    to enable/disable Virtual Network ACL rules.
                  type: boolean
                mongoDBVersion:
                  type: string
              type: object
            resourceGroup:
              type: string
            virtualNetworkRules:
              items:
                description: CosmosDBVirtualNetworkRule virtual Network ACL Rule object
                properties:
                  ignoreMissingVNetServiceEndpoint:
                    description: IgnoreMissingVNetServiceEndpoint - Create firewall
                      rule before the virtual network has vnet service endpoint enabled.
                    type: boolean
                  subnetID:
                    description: 'ID - Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}.'
                    type: string
                type: object
              type: array
          required:
          - resourceGroup
          type: object
        status:
          description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
            state of resource actions
          properties:
            completed:
              format: date-time
              type: string
            containsUpdate:
              type: boolean
            failedProvisioning:
              type: boolean
            flattenedSecrets:
              type: boolean
            message:
              type: string
            pollingUrl:
              type: string
            provisioned:
              type: boolean
            provisioning:
              type: boolean
            requested:
              format: date-time
              type: string
            resourceId:
              type: string
            specHash:
              type: string
            state:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: azure-service-operator/templates/generated/apiextensions.k8s.io_v1beta1_customresourcedefinition_eventhubnamespaces.azure.microsoft.com.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: eventhubnamespaces.azure.microsoft.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.provisioned
    name: Provisioned
    type: string
  - JSONPath: .status.message
    name: Message
    type: string
  group: azure.microsoft.com
  names:
    kind: EventhubNamespace
    listKind: EventhubNamespaceList
    plural: eventhubnamespaces
    singular: eventhubnamespace
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: EventhubNamespace is the Schema for the eventhubnamespaces API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: EventhubNamespaceSpec defines the desired state of EventhubNamespace
          properties:
            location:
              description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                Important: Run "make" to regenerate code after modifying this file'
              type: string
            networkRule:
              description: EventhubNamespaceNetworkRule defines the namespace network
                rule
              properties:
                defaultAction:
                  description: DefaultAction defined as a string
                  type: string
                ipRules:
                  description: IPRules - List of IpRules
                  items:
                    properties:
                      ipMask:
                        description: IPMask - IPv4 address 1.1.1.1 or CIDR notation
                          1.1.0.0/24
                        type: string
                    type: object
                  type: array
                virtualNetworkRules:
                  description: VirtualNetworkRules - List VirtualNetwork Rules
                  items:
                    properties:
                      ignoreMissingServiceEndpoint:
                        description: IgnoreMissingVnetServiceEndpoint - Value that
                          indicates whether to ignore missing VNet Service Endpoint
                        type: boolean
                      subnetId:
                        description: Subnet - Full Resource ID of Virtual Network
                          Subnet
                        type: string
                    type: object
                  type: array
              type: object
            properties:
              description: EventhubNamespaceProperties defines the namespace properties
              properties:
                isAutoInflateEnabled:
                  type: boolean
                kafkaEnabled:
                  type: boolean
                maximumThroughputUnits:
                  format: int32
                  type: integer
              type: object
            resourceGroup:
              type: string
            sku:
              description: EventhubNamespaceSku defines the sku
              properties:
                capacity:
                  format: int32
                  type: integer
                name:
                  type: string
                tier:
                  type: string
              type: object
          required:
          - location
          type: object
        status:
          description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
            state of resource actions
          properties:
            completed:
              format: date-time
              type: string
            containsUpdate:
              type: boolean
            failedProvisioning:
              type: boolean
            flattenedSecrets:
              type: boolean
            message:
              type: string
            pollingUrl:
              type: string
            provisioned:
              type: boolean
            provisioning:
              type: boolean
            requested:
              format: date-time
              type: string
            resourceId:
              type: string
            specHash:
              type: string
            state:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: azure-service-operator/templates/generated/apiextensions.k8s.io_v1beta1_customresourcedefinition_eventhubs.azure.microsoft.com.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: eventhubs.azure.microsoft.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.provisioned
    name: Provisioned
    type: string
  - JSONPath: .status.message
    name: Message
    type: string
  group: azure.microsoft.com
  names:
    kind: Eventhub
    listKind: EventhubList
    plural: eventhubs
    singular: eventhub
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Eventhub is the Schema for the eventhubs API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: EventhubSpec defines the desired state of Eventhub
          properties:
            authorizationRule:
              description: EventhubAuthorizationRule defines the name and rights of
                the access policy
              properties:
                name:
                  description: Name - Name of AuthorizationRule for eventhub
                  type: string
                rights:
                  description: Rights - Rights set on the AuthorizationRule
                  items:
                    type: string
                  type: array
              type: object
            keyVaultToStoreSecrets:
              type: string
            location:
              description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                Important: Run "make" to regenerate code after modifying this file'
              type: string
            namespace:
              type: string
            properties:
              description: EventhubProperties defines the namespace properties
              properties:
                captureDescription:
                  description: CaptureDescription - Details specifying EventHub capture
                    to persistent storage
                  properties:
                    destination:
                      description: Destination - Resource id of the storage account
                        to be used to create the blobs
                      properties:
                        archiveNameFormat:
                          description: ArchiveNameFormat - Blob naming convention
                            for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}.
                            Here all the parameters (Namespace,EventHub .. etc) are
                            mandatory irrespective of order
                          type: string
                        blobContainer:
                          description: BlobContainer - Blob container Name
                          type: string
                        name:
                          description: Name - Name for capture destination
                          enum:
                          - EventHubArchive.AzureBlockBlob
                          - EventHubArchive.AzureDataLake
                          type: string
                        storageAccount:
                          description: StorageAccount - Details of the storage account
                          properties:
                            accountName:
                              description: AccountName - Name of the storage account
                              maxLength: 24
                              minLength: 3
                              pattern: ^[a-z0-9]+$
                              type: string
                            resourceGroup:
                              description: ResourceGroup - Name of the storage account
                                resource group
                              pattern: ^[-\w\._\(\)]+$
                              type: string
                          type: object
                      type: object
                    enabled:
                      description: Enabled - indicates whether capture is enabled
                      type: boolean
                    intervalInSeconds:
                      description: IntervalInSeconds - The time window allows you
                        to set the frequency with which the capture to Azure Blobs
                        will happen
                      format: int32
                      maximum: 900
                      minimum: 60
                      type: integer
                    sizeLimitInBytes:
                      description: SizeLimitInBytes - The size window defines the
                        amount of data built up in your Event Hub before an capture
                        operation
                      format: int32
                      maximum: 524288000
                      minimum: 10485760
                      type: integer
                  required:
                  - enabled
                  type: object
                messageRetentionInDays:
                  description: MessageRetentionInDays - Number of days to retain the
                    events for this Event Hub, value should be 1 to 7 days
                  format: int32
                  maximum: 7
                  minimum: 1
                  type: integer
                partitionCount:
                  description: PartitionCount - Number of partitions created for the
                    Event Hub, allowed values are from 2 to 32 partitions.
                  format: int32
                  maximum: 32
                  minimum: 2
                  type: integer
              type: object
            resourceGroup:
              type: string
            secretName:
              description: SecretName - Used to specify the name of the secret. Defaults
                to Event Hub name if omitted.
              type: string
          required:
          - location
          type: object
        status:
          description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
            state of resource actions
          properties:
            completed:
              format: date-time
              type: string
            containsUpdate:
              type: boolean
            failedProvisioning:
              type: boolean
            flattenedSecrets:
              type: boolean
            message:
              type: string
            pollingUrl:
              type: string
            provisioned:
              type: boolean
            provisioning:
              type: boolean
            requested:
              format: date-time
              type: string
            resourceId:
              type: string
            specHash:
              type: string
            state:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: azure-service-operator/templates/generated/apiextensions.k8s.io_v1beta1_customresourcedefinition_keyvaultkeys.azure.microsoft.com.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: keyvaultkeys.azure.microsoft.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.provisioned
    name: Provisioned
    type: string
  - JSONPath: .status.message
    name: Message
    type: string
  group: azure.microsoft.com
  names:
    kind: KeyVaultKey
    listKind: KeyVaultKeyList
    plural: keyvaultkeys
    singular: keyvaultkey
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: KeyVaultKey is the Schema for the keyvaultkeys API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: KeyVaultKeySpec defines the desired state of KeyVaultKey
          properties:
            keySize:
              format: int32
              type: integer
            keyVault:
              type: string
            location:
              description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                Important: Run "make" to regenerate code after modifying this file'
              type: string
            operations:
              items:
                description: JSONWebKeyOperation enumerates the values for json web
                  key operation.
                type: string
              type: array
            resourceGroup:
              type: string
            type:
              description: JSONWebKeyType enumerates the values for json web key type.
              type: string
          required:
          - location
          - resourceGroup
          type: object
        status:
          description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
            state of resource actions
          properties:
            completed:
              format: date-time
              type: string
            containsUpdate:
              type: boolean
            failedProvisioning:
              type: boolean
            flattenedSecrets:
              type: boolean
            message:
              type: string
            pollingUrl:
              type: string
            provisioned:
              type: boolean
            provisioning:
              type: boolean
            requested:
              format: date-time
              type: string
            resourceId:
              type: string
            specHash:
              type: string
            state:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: azure-service-operator/templates/generated/apiextensions.k8s.io_v1beta1_customresourcedefinition_keyvaults.azure.microsoft.com.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: keyvaults.azure.microsoft.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.provisioned
    name: Provisioned
    type: string
  - JSONPath: .status.message
    name: Message
    type: string
  group: azure.microsoft.com
  names:
    kind: KeyVault
    listKind: KeyVaultList
    plural: keyvaults
    singular: keyvault
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: KeyVault is the Schema for the keyvaults API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: KeyVaultSpec defines the desired state of KeyVault
          properties:
            accessPolicies:
              items:
                properties:
                  applicationID:
                    description: ApplicationID -  Application ID of the client making
                      request on behalf of a principal
                    type: string
                  clientID:
                    description: ClientID - The client ID of a user, service principal
                      or security group in the Azure Active Directory tenant for the
                      vault. The client ID must be unique for the list of access policies.
                    type: string
                  permissions:
                    description: Permissions - Permissions the identity has for keys,
                      secrets, and certificates.
                    properties:
                      certificates:
                        items:
                          type: string
                        type: array
                      keys:
                        items:
                          type: string
                        type: array
                      secrets:
                        items:
                          type: string
                        type: array
                      storage:
                        items:
                          type: string
                        type: array
                    type: object
                  tenantID:
                    description: TenantID - The Azure Active Directory tenant ID that
                      should be used for authenticating requests to the key vault.
                    type: string
                type: object
              type: array
            enableSoftDelete:
              type: boolean
            location:
              type: string
            networkPolicies:
              properties:
                bypass:
                  description: 'Bypass - Tells what traffic can bypass network rules.
                    This can be ''AzureServices'' or ''None''.  If not specified the
                    default is ''AzureServices''. Possible values include: ''AzureServices'',
                    ''None'''
                  type: string
                defaultAction:
                  description: 'DefaultAction - The default action when no rule from
                    ipRules and from virtualNetworkRules match. This is only used
                    after the bypass property has been evaluated. Possible values
                    include: ''Allow'', ''Deny'''
                  type: string
                ipRules:
                  description: IPRules - The list of IP address rules.
                  items:
                    type: string
                  type: array
                virtualNetworkRules:
                  description: VirtualNetworkRules - The list of virtual network rules.
                  items:
                    type: string
                  type: array
              type: object
            resourceGroup:
              type: string
            sku:
              description: KeyVaultSku the SKU of the Key Vault
              properties:
                name:
                  description: 'Name - The SKU name. Required for account creation;
                    optional for update. Possible values include: ''Premium'', `Standard`'
                  type: string
              type: object
          required:
          - location
          - resourceGroup
          type: object
        status:
          description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
            state of resource actions
          properties:
            completed:
              format: date-time
              type: string
            containsUpdate:
              type: boolean
            failedProvisioning:
              type: boolean
            flattenedSecrets:
              type: boolean
            message:
              type: string
            pollingUrl:
              type: string
            provisioned:
              type: boolean
            provisioning:
              type: boolean
            requested:
              format: date-time
              type: string
            resourceId:
              type: string
            specHash:
              type: string
            state:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: azure-service-operator/templates/generated/apiextensions.k8s.io_v1beta1_customresourcedefinition_mysqldatabases.azure.microsoft.com.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: mysqldatabases.azure.microsoft.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.provisioned
    name: Provisioned
    type: string
  - JSONPath: .status.message
    name: Message
    type: string
  group: azure.microsoft.com
  names:
    kind: MySQLDatabase
    listKind: MySQLDatabaseList
    plural: mysqldatabases
    singular: mysqldatabase
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: MySQLDatabase is the Schema for the mysqldatabases API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: MySQLDatabaseSpec defines the desired state of MySQLDatabase
          properties:
            resourceGroup:
              type: string
            server:
              type: string
          type: object
        status:
          description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
            state of resource actions
          properties:
            completed:
              format: date-time
              type: string
            containsUpdate:
              type: boolean
            failedProvisioning:
              type: boolean
            flattenedSecrets:
              type: boolean
            message:
              type: string
            pollingUrl:
              type: string
            provisioned:
              type: boolean
            provisioning:
              type: boolean
            requested:
              format: date-time
              type: string
            resourceId:
              type: string
            specHash:
              type: string
            state:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: azure-service-operator/templates/generated/apiextensions.k8s.io_v1beta1_customresourcedefinition_mysqlfirewallrules.azure.microsoft.com.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: mysqlfirewallrules.azure.microsoft.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.provisioned
    name: Provisioned
    type: string
  - JSONPath: .status.message
    name: Message
    type: string
  group: azure.microsoft.com
  names:
    kind: MySQLFirewallRule
    listKind: MySQLFirewallRuleList
    plural: mysqlfirewallrules
    singular: mysqlfirewallrule
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: MySQLFirewallRule is the Schema for the mysqlfirewallrules API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: MySQLFirewallRuleSpec defines the desired state of MySQLFirewallRule
          properties:
            endIpAddress:
              type: string
            resourceGroup:
              type: string
            server:
              type: string
            startIpAddress:
              type: string
          required:
          - endIpAddress
          - resourceGroup
          - server
          - startIpAddress
          type: object
        status:
          description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
            state of resource actions
          properties:
            completed:
              format: date-time
              type: string
            containsUpdate:
              type: boolean
            failedProvisioning:
              type: boolean
            flattenedSecrets:
              type: boolean
            message:
              type: string
            pollingUrl:
              type: string
            provisioned:
              type: boolean
            provisioning:
              type: boolean
            requested:
              format: date-time
              type: string
            resourceId:
              type: string
            specHash:
              type: string
            state:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: azure-service-operator/templates/generated/apiextensions.k8s.io_v1beta1_customresourcedefinition_mysqlservers.azure.microsoft.com.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: azureoperator-system/azureoperator-serving-cert
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: mysqlservers.azure.microsoft.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.provisioned
    name: Provisioned
    type: string
  - JSONPath: .status.message
    name: Message
    type: string
  conversion:
    strategy: Webhook
    webhookClientConfig:
      caBundle: Cg==
      service:
        name: azureoperator-webhook-service
        namespace: azureoperator-system
        path: /convert
  group: azure.microsoft.com
  names:
    kind: MySQLServer
    listKind: MySQLServerList
    plural: mysqlservers
    singular: mysqlserver
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  version: v1alpha1
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MySQLServer is the Schema for the mysqlservers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MySQLServerSpec defines the desired state of MySQLServer
            properties:
              createMode:
                type: string
              keyVaultToStoreSecrets:
                type: string
              location:
                type: string
              replicaProperties:
                properties:
                  sourceServerId:
                    type: string
                type: object
              resourceGroup:
                type: string
              serverVersion:
                description: ServerVersion enumerates the values for server version.
                type: string
              sku:
                properties:
                  capacity:
                    description: Capacity - The scale up/out capacity, representing
                      server's compute units.
                    format: int32
                    type: integer
                  family:
                    description: Family - The family of hardware.
                    type: string
                  name:
                    description: Name - The name of the sku, typically, tier + family
                      + cores, e.g. B_Gen4_1, GP_Gen5_8.
                    type: string
                  size:
                    description: Size - The size code, to be interpreted by resource
                      as appropriate.
                    type: string
                  tier:
                    description: 'Tier - The tier of the particular SKU, e.g. Basic.
                      Possible values include: ''Basic'', ''GeneralPurpose'', ''MemoryOptimized'''
                    type: string
                type: object
              sslEnforcement:
                type: string
            required:
            - location
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              pollingUrl:
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: false
  - name: v1alpha2
    schema:
      openAPIV3Schema:
        description: MySQLServer is the Schema for the mysqlservers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MySQLServerSpec defines the desired state of MySQLServer
            properties:
              createMode:
                type: string
              keyVaultToStoreSecrets:
                type: string
              location:
                type: string
              replicaProperties:
                properties:
                  sourceServerId:
                    type: string
                type: object
              resourceGroup:
                type: string
              serverVersion:
                description: ServerVersion enumerates the values for server version.
                type: string
              sku:
                properties:
                  capacity:
                    description: Capacity - The scale up/out capacity, representing
                      server's compute units.
                    format: int32
                    type: integer
                  family:
                    description: Family - The family of hardware.
                    type: string
                  name:
                    description: Name - The name of the sku, typically, tier + family
                      + cores, e.g. B_Gen4_1, GP_Gen5_8.
                    type: string
                  size:
                    description: Size - The size code, to be interpreted by resource
                      as appropriate.
                    type: string
                  tier:
                    description: 'Tier - The tier of the particular SKU, e.g. Basic.
                      Possible values include: ''Basic'', ''GeneralPurpose'', ''MemoryOptimized'''
                    type: string
                type: object
              sslEnforcement:
                type: string
              storageProfile:
                properties:
                  backupRetentionDays:
                    description: BackupRetentionDays - Backup retention days for the
                      server.
                    format: int32
                    type: integer
                  geoRedundantBackup:
                    description: 'GeoRedundantBackup - Enable Geo-redundant or not
                      for server backup. Possible values include: ''Enabled'', ''Disabled'''
                    type: string
                  storageAutogrow:
                    description: 'StorageAutogrow - Enable Storage Auto Grow. Possible
                      values include: ''StorageAutogrowEnabled'', ''StorageAutogrowDisabled'''
                    type: string
                  storageMB:
                    description: StorageMB - Max storage allowed for a server.
                    format: int32
                    type: integer
                type: object
            required:
            - location
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              pollingUrl:
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: azure-service-operator/templates/generated/apiextensions.k8s.io_v1beta1_customresourcedefinition_mysqlvnetrules.azure.microsoft.com.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: mysqlvnetrules.azure.microsoft.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.provisioned
    name: Provisioned
    type: string
  - JSONPath: .status.message
    name: Message
    type: string
  group: azure.microsoft.com
  names:
    kind: MySQLVNetRule
    listKind: MySQLVNetRuleList
    plural: mysqlvnetrules
    singular: mysqlvnetrule
  scope: Namespaced
  subresources: {}
  validation:
    openAPIV3Schema:
      description: MySQLVNetRule is the Schema for the mysqlvnetrules API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: MySQLVNetRuleSpec defines the desired state of MySQLVNetRule
          properties:
            ignoreMissingServiceEndpoint:
              type: boolean
            resourceGroup:
              description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                Important: Run "make" to regenerate code after modifying this file'
              type: string
            server:
              type: string
            subnetName:
              type: string
            vNetName:
              type: string
            vNetResourceGroup:
              type: string
          required:
          - resourceGroup
          - server
          - subnetName
          - vNetName
          - vNetResourceGroup
          type: object
        status:
          description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
            state of resource actions
          properties:
            completed:
              format: date-time
              type: string
            containsUpdate:
              type: boolean
            failedProvisioning:
              type: boolean
            flattenedSecrets:
              type: boolean
            message:
              type: string
            pollingUrl:
              type: string
            provisioned:
              type: boolean
            provisioning:
              type: boolean
            requested:
              format: date-time
              type: string
            resourceId:
              type: string
            specHash:
              type: string
            state:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: azure-service-operator/templates/generated/apiextensions.k8s.io_v1beta1_customresourcedefinition_postgresqldatabases.azure.microsoft.com.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: postgresqldatabases.azure.microsoft.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.provisioned
    name: Provisioned
    type: string
  - JSONPath: .status.message
    name: Message
    type: string
  group: azure.microsoft.com
  names:
    kind: PostgreSQLDatabase
    listKind: PostgreSQLDatabaseList
    plural: postgresqldatabases
    singular: postgresqldatabase
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: PostgreSQLDatabase is the Schema for the postgresqldatabases API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: PostgreSQLDatabaseSpec defines the desired state of PostgreSQLDatabase
          properties:
            resourceGroup:
              description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                Important: Run "make" to regenerate code after modifying this file'
              type: string
            server:
              type: string
          required:
          - resourceGroup
          - server
          type: object
        status:
          description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
            state of resource actions
          properties:
            completed:
              format: date-time
              type: string
            containsUpdate:
              type: boolean
            failedProvisioning:
              type: boolean
            flattenedSecrets:
              type: boolean
            message:
              type: string
            pollingUrl:
              type: string
            provisioned:
              type: boolean
            provisioning:
              type: boolean
            requested:
              format: date-time
              type: string
            resourceId:
              type: string
            specHash:
              type: string
            state:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: azure-service-operator/templates/generated/apiextensions.k8s.io_v1beta1_customresourcedefinition_postgresqlfirewallrules.azure.microsoft.com.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: postgresqlfirewallrules.azure.microsoft.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.provisioned
    name: Provisioned
    type: string
  - JSONPath: .status.message
    name: Message
    type: string
  group: azure.microsoft.com
  names:
    kind: PostgreSQLFirewallRule
    listKind: PostgreSQLFirewallRuleList
    plural: postgresqlfirewallrules
    singular: postgresqlfirewallrule
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: PostgreSQLFirewallRule is the Schema for the postgresqlfirewallrules
        API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: PostgreSQLFirewallRuleSpec defines the desired state of PostgreSQLFirewallRule
          properties:
            endIpAddress:
              type: string
            resourceGroup:
              description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                Important: Run "make" to regenerate code after modifying this file'
              type: string
            server:
              type: string
            startIpAddress:
              type: string
          required:
          - endIpAddress
          - resourceGroup
          - server
          - startIpAddress
          type: object
        status:
          description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
            state of resource actions
          properties:
            completed:
              format: date-time
              type: string
            containsUpdate:
              type: boolean
            failedProvisioning:
              type: boolean
            flattenedSecrets:
              type: boolean
            message:
              type: string
            pollingUrl:
              type: string
            provisioned:
              type: boolean
            provisioning:
              type: boolean
            requested:
              format: date-time
              type: string
            resourceId:
              type: string
            specHash:
              type: string
            state:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: azure-service-operator/templates/generated/apiextensions.k8s.io_v1beta1_customresourcedefinition_postgresqlservers.azure.microsoft.com.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: azureoperator-system/azureoperator-serving-cert
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: postgresqlservers.azure.microsoft.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.provisioned
    name: Provisioned
    type: string
  - JSONPath: .status.message
    name: Message
    type: string
  conversion:
    strategy: Webhook
    webhookClientConfig:
      caBundle: Cg==
      service:
        name: azureoperator-webhook-service
        namespace: azureoperator-system
        path: /convert
  group: azure.microsoft.com
  names:
    kind: PostgreSQLServer
    listKind: PostgreSQLServerList
    plural: postgresqlservers
    singular: postgresqlserver
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  version: v1alpha1
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PostgreSQLServer is the Schema for the postgresqlservers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PostgreSQLServerSpec defines the desired state of PostgreSQLServer
            properties:
              createMode:
                type: string
              keyVaultToStoreSecrets:
                type: string
              location:
                type: string
              replicaProperties:
                properties:
                  sourceServerId:
                    type: string
                type: object
              resourceGroup:
                type: string
              serverVersion:
                description: ServerVersion enumerates the values for server version.
                type: string
              sku:
                properties:
                  capacity:
                    description: Capacity - The scale up/out capacity, representing
                      server's compute units.
                    format: int32
                    type: integer
                  family:
                    description: Family - The family of hardware.
                    type: string
                  name:
                    description: Name - The name of the sku, typically, tier + family
                      + cores, e.g. B_Gen4_1, GP_Gen5_8.
                    type: string
                  size:
                    description: Size - The size code, to be interpreted by resource
                      as appropriate.
                    type: string
                  tier:
                    description: 'Tier - The tier of the particular SKU, e.g. Basic.
                      Possible values include: ''Basic'', ''GeneralPurpose'', ''MemoryOptimized'''
                    type: string
                type: object
              sslEnforcement:
                type: string
            required:
            - location
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              pollingUrl:
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: false
  - name: v1alpha2
    schema:
      openAPIV3Schema:
        description: PostgreSQLServer is the Schema for the postgresqlservers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PostgreSQLServerSpec defines the desired state of PostgreSQLServer
            properties:
              createMode:
                type: string
              keyVaultToStoreSecrets:
                type: string
              location:
                type: string
              replicaProperties:
                properties:
                  sourceServerId:
                    type: string
                type: object
              resourceGroup:
                type: string
              serverVersion:
                description: ServerVersion enumerates the values for server version.
                type: string
              sku:
                properties:
                  capacity:
                    description: Capacity - The scale up/out capacity, representing
                      server's compute units.
                    format: int32
                    type: integer
                  family:
                    description: Family - The family of hardware.
                    type: string
                  name:
                    description: Name - The name of the sku, typically, tier + family
                      + cores, e.g. B_Gen4_1, GP_Gen5_8.
                    type: string
                  size:
                    description: Size - The size code, to be interpreted by resource
                      as appropriate.
                    type: string
                  tier:
                    description: 'Tier - The tier of the particular SKU, e.g. Basic.
                      Possible values include: ''Basic'', ''GeneralPurpose'', ''MemoryOptimized'''
                    type: string
                type: object
              sslEnforcement:
                type: string
              storageProfile:
                properties:
                  backupRetentionDays:
                    description: BackupRetentionDays - Backup retention days for the
                      server.
                    format: int32
                    type: integer
                  geoRedundantBackup:
                    description: 'GeoRedundantBackup - Enable Geo-redundant or not
                      for server backup. Possible values include: ''Enabled'', ''Disabled'''
                    type: string
                  storageAutogrow:
                    description: 'StorageAutogrow - Enable Storage Auto Grow. Possible
                      values include: ''StorageAutogrowEnabled'', ''StorageAutogrowDisabled'''
                    type: string
                  storageMB:
                    description: StorageMB - Max storage allowed for a server.
                    format: int32
                    type: integer
                type: object
            required:
            - location
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              pollingUrl:
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: azure-service-operator/templates/generated/apiextensions.k8s.io_v1beta1_customresourcedefinition_postgresqlusers.azure.microsoft.com.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: postgresqlusers.azure.microsoft.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.provisioned
    name: Provisioned
    type: string
  - JSONPath: .status.message
    name: Message
    type: string
  group: azure.microsoft.com
  names:
    kind: PostgreSQLUser
    listKind: PostgreSQLUserList
    plural: postgresqlusers
    shortNames:
    - psqlu
    singular: postgresqluser
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: PostgreSQLUser is the Schema for the postgresqlusers API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: PostgreSQLUserSpec defines the desired state of PostgreSqlUser
          properties:
            adminSecret:
              description: optional
              type: string
            adminSecretKeyVault:
              type: string
            dbName:
              type: string
            keyVaultSecretFormats:
              items:
                type: string
              type: array
            keyVaultSecretPrefix:
              type: string
            keyVaultToStoreSecrets:
              type: string
            resourceGroup:
              type: string
            roles:
              items:
                type: string
              type: array
            server:
              description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                Important: Run "make" to regenerate code after modifying this file'
              type: string
            username:
              type: string
          required:
          - dbName
          - roles
          - server
          type: object
        status:
          description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
            state of resource actions
          properties:
            completed:
              format: date-time
              type: string
            containsUpdate:
              type: boolean
            failedProvisioning:
              type: boolean
            flattenedSecrets:
              type: boolean
            message:
              type: string
            pollingUrl:
              type: string
            provisioned:
              type: boolean
            provisioning:
              type: boolean
            requested:
              format: date-time
              type: string
            resourceId:
              type: string
            specHash:
              type: string
            state:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: azure-service-operator/templates/generated/apiextensions.k8s.io_v1beta1_customresourcedefinition_postgresqlvnetrules.azure.microsoft.com.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: postgresqlvnetrules.azure.microsoft.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.provisioned
    name: Provisioned
    type: string
  - JSONPath: .status.message
    name: Message
    type: string
  group: azure.microsoft.com
  names:
    kind: PostgreSQLVNetRule
    listKind: PostgreSQLVNetRuleList
    plural: postgresqlvnetrules
    singular: postgresqlvnetrule
  scope: Namespaced
  subresources: {}
  validation:
    openAPIV3Schema:
      description: PostgreSQLVNetRule is the Schema for the PostgreSQLVNetRules API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: PotgreSQLVNetRuleSpec defines the desired state of PostgreSQLVNetRule
          properties:
            ignoreMissingServiceEndpoint:
              type: boolean
            resourceGroup:
              description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                Important: Run "make" to regenerate code after modifying this file'
              type: string
            server:
              type: string
            subnetName:
              type: string
            vNetName:
              type: string
            vNetResourceGroup:
              type: string
          required:
          - resourceGroup
          - server
          - subnetName
          - vNetName
          - vNetResourceGroup
          type: object
        status:
          description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
            state of resource actions
          properties:
            completed:
              format: date-time
              type: string
            containsUpdate:
              type: boolean
            failedProvisioning:
              type: boolean
            flattenedSecrets:
              type: boolean
            message:
              type: string
            pollingUrl:
              type: string
            provisioned:
              type: boolean
            provisioning:
              type: boolean
            requested:
              format: date-time
              type: string
            resourceId:
              type: string
            specHash:
              type: string
            state:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: azure-service-operator/templates/generated/apiextensions.k8s.io_v1beta1_customresourcedefinition_rediscacheactions.azure.microsoft.com.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: rediscacheactions.azure.microsoft.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.provisioned
    name: Provisioned
    type: string
  - JSONPath: .status.message
    name: Message
    type: string
  group: azure.microsoft.com
  names:
    kind: RedisCacheAction
    listKind: RedisCacheActionList
    plural: rediscacheactions
    singular: rediscacheaction
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: RedisCacheAction is the Schema for the rediscacheactions API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: RedisCacheActionSpec defines the desired state of RedisCacheAction
          properties:
            actionName:
              enum:
              - rollallkeys
              - rollprimarykey
              - rollsecondarykey
              type: string
            cacheName:
              type: string
            keyVaultToStoreSecrets:
              type: string
            resourceGroup:
              type: string
            secretName:
              type: string
          required:
          - actionName
          - cacheName
          - resourceGroup
          type: object
        status:
          description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
            state of resource actions
          properties:
            completed:
              format: date-time
              type: string
            containsUpdate:
              type: boolean
            failedProvisioning:
              type: boolean
            flattenedSecrets:
              type: boolean
            message:
              type: string
            pollingUrl:
              type: string
            provisioned:
              type: boolean
            provisioning:
              type: boolean
            requested:
              format: date-time
              type: string
            resourceId:
              type: string
            specHash:
              type: string
            state:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: azure-service-operator/templates/generated/apiextensions.k8s.io_v1beta1_customresourcedefinition_rediscachefirewallrules.azure.microsoft.com.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: rediscachefirewallrules.azure.microsoft.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.provisioned
    name: Provisioned
    type: string
  - JSONPath: .status.message
    name: Message
    type: string
  group: azure.microsoft.com
  names:
    kind: RedisCacheFirewallRule
    listKind: RedisCacheFirewallRuleList
    plural: rediscachefirewallrules
    singular: rediscachefirewallrule
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: RedisCacheFirewallRule is the Schema for the rediscachefirewallrules
        API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: RedisCacheFirewallRuleSpec defines the desired state of RedisCacheFirewallRule
          properties:
            properties:
              description: RedisCacheFirewallRuleProperties the parameters of the
                RedisCacheFirewallRule
              properties:
                endIP:
                  type: string
                startIP:
                  type: string
              required:
              - endIP
              - startIP
              type: object
            redisCache:
              type: string
            resourceGroup:
              type: string
          required:
          - properties
          - redisCache
          - resourceGroup
          type: object
        status:
          description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
            state of resource actions
          properties:
            completed:
              format: date-time
              type: string
            containsUpdate:
              type: boolean
            failedProvisioning:
              type: boolean
            flattenedSecrets:
              type: boolean
            message:
              type: string
            pollingUrl:
              type: string
            provisioned:
              type: boolean
            provisioning:
              type: boolean
            requested:
              format: date-time
              type: string
            resourceId:
              type: string
            specHash:
              type: string
            state:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: azure-service-operator/templates/generated/apiextensions.k8s.io_v1beta1_customresourcedefinition_rediscaches.azure.microsoft.com.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: rediscaches.azure.microsoft.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.provisioned
    name: Provisioned
    type: string
  - JSONPath: .status.message
    name: Message
    type: string
  group: azure.microsoft.com
  names:
    kind: RedisCache
    listKind: RedisCacheList
    plural: rediscaches
    singular: rediscache
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: RedisCache is the Schema for the rediscaches API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: RedisCacheSpec defines the desired state of RedisCache
          properties:
            keyVaultToStoreSecrets:
              type: string
            location:
              minLength: 0
              type: string
            properties:
              description: RedisCacheProperties the properties of the Redis Cache.
              properties:
                configuration:
                  additionalProperties:
                    type: string
                  type: object
                enableNonSslPort:
                  type: boolean
                sku:
                  description: RedisCacheSku the SKU of the Redis Cache.
                  properties:
                    capacity:
                      format: int32
                      type: integer
                    family:
                      type: string
                    name:
                      description: 'Name - The SKU name. Required for account creation;
                        optional for update. Possible values include: ''StandardLRS'',
                        ''StandardGRS'', ''StandardRAGRS'', ''StandardZRS'', ''PremiumLRS'',
                        ''PremiumZRS'', ''StandardGZRS'', ''StandardRAGZRS'''
                      type: string
                  type: object
                staticIp:
                  type: string
                subnetId:
                  type: string
              type: object
            resourceGroup:
              type: string
            secretName:
              type: string
          required:
          - resourceGroup
          type: object
        status:
          description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
            state of resource actions
          properties:
            completed:
              format: date-time
              type: string
            containsUpdate:
              type: boolean
            failedProvisioning:
              type: boolean
            flattenedSecrets:
              type: boolean
            message:
              type: string
            pollingUrl:
              type: string
            provisioned:
              type: boolean
            provisioning:
              type: boolean
            requested:
              format: date-time
              type: string
            resourceId:
              type: string
            specHash:
              type: string
            state:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: azure-service-operator/templates/generated/apiextensions.k8s.io_v1beta1_customresourcedefinition_resourcegroups.azure.microsoft.com.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: resourcegroups.azure.microsoft.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.provisioned
    name: Provisioned
    type: string
  - JSONPath: .status.message
    name: Message
    type: string
  group: azure.microsoft.com
  names:
    kind: ResourceGroup
    listKind: ResourceGroupList
    plural: resourcegroups
    shortNames:
    - rg
    singular: resourcegroup
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: ResourceGroup is the Schema for the resourcegroups API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ResourceGroupSpec defines the desired state of ResourceGroup
          properties:
            location:
              description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                Important: Run "make" to regenerate code after modifying this file'
              type: string
          required:
          - location
          type: object
        status:
          description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
            state of resource actions
          properties:
            completed:
              format: date-time
              type: string
            containsUpdate:
              type: boolean
            failedProvisioning:
              type: boolean
            flattenedSecrets:
              type: boolean
            message:
              type: string
            pollingUrl:
              type: string
            provisioned:
              type: boolean
            provisioning:
              type: boolean
            requested:
              format: date-time
              type: string
            resourceId:
              type: string
            specHash:
              type: string
            state:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: azure-service-operator/templates/generated/apiextensions.k8s.io_v1beta1_customresourcedefinition_storageaccounts.azure.microsoft.com.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: storageaccounts.azure.microsoft.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.provisioned
    name: Provisioned
    type: string
  - JSONPath: .status.message
    name: Message
    type: string
  group: azure.microsoft.com
  names:
    kind: StorageAccount
    listKind: StorageAccountList
    plural: storageaccounts
    singular: storageaccount
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: StorageAccount is the Schema for the storages API
      properties:
        additionalResources:
          description: StorageAccountAdditionalResources holds the additional resources
          properties:
            secrets:
              items:
                type: string
              type: array
          type: object
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        output:
          description: StorageAccountOutput is the object that contains the output
            from creating a Storage Account object
          properties:
            connectionString1:
              type: string
            connectionString2:
              type: string
            key1:
              type: string
            key2:
              type: string
            storageAccountName:
              type: string
          type: object
        spec:
          description: StorageAccountSpec defines the desired state of Storage
          properties:
            accessTier:
              description: StorageAccountAccessTier enumerates the values for access
                tier. Only one of the following access tiers may be specified. If
                none of the following access tiers is specified, the default one is
                Hot.
              enum:
              - Cool
              - Hot
              type: string
            dataLakeEnabled:
              type: boolean
            kind:
              description: StorageAccountKind enumerates the values for kind. Only
                one of the following kinds may be specified. If none of the following
                kinds is specified, the default one is StorageV2.
              enum:
              - BlobStorage
              - BlockBlobStorage
              - FileStorage
              - Storage
              - StorageV2
              type: string
            location:
              minLength: 0
              type: string
            networkRule:
              properties:
                bypass:
                  description: 'Bypass - Specifies whether traffic is bypassed for
                    Logging/Metrics/AzureServices. Possible values are any combination
                    of Logging|Metrics|AzureServices (For example, "Logging, Metrics"),
                    or None to bypass none of those traffics. Possible values include:
                    ''None'', ''Logging'', ''Metrics'', ''AzureServices'''
                  type: string
                defaultAction:
                  description: 'DefaultAction - Specifies the default action of allow
                    or deny when no other rules match. Possible values include: ''DefaultActionAllow'',
                    ''DefaultActionDeny'''
                  type: string
                ipRules:
                  description: IPRules - Sets the IP ACL rules
                  items:
                    properties:
                      ipAddressOrRange:
                        description: IPAddressOrRange - Specifies the IP or IP range
                          in CIDR format. Only IPV4 address is allowed.
                        type: string
                    type: object
                  type: array
                virtualNetworkRules:
                  description: VirtualNetworkRules - Sets the virtual network rules
                  items:
                    properties:
                      subnetId:
                        description: 'SubnetId - Resource ID of a subnet, for example:
                          /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.'
                        type: string
                    type: object
                  type: array
              type: object
            resourceGroup:
              type: string
            sku:
              description: StorageAccountSku the SKU of the storage account.
              properties:
                name:
                  description: 'Name - The SKU name. Required for account creation;
                    optional for update. Possible values include: ''StandardLRS'',
                    ''StandardGRS'', ''StandardRAGRS'', ''StandardZRS'', ''PremiumLRS'',
                    ''PremiumZRS'', ''StandardGZRS'', ''StandardRAGZRS'''
                  enum:
                  - Premium_LRS
                  - Premium_ZRS
                  - Standard_GRS
                  - Standard_GZRS
                  - Standard_LRS
                  - Standard_RAGRS
                  - Standard_RAGZRS
                  - Standard_ZRS
                  type: string
              type: object
            supportsHttpsTrafficOnly:
              type: boolean
          required:
          - resourceGroup
          type: object
        status:
          description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
            state of resource actions
          properties:
            completed:
              format: date-time
              type: string
            containsUpdate:
              type: boolean
            failedProvisioning:
              type: boolean
            flattenedSecrets:
              type: boolean
            message:
              type: string
            pollingUrl:
              type: string
            provisioned:
              type: boolean
            provisioning:
              type: boolean
            requested:
              format: date-time
              type: string
            resourceId:
              type: string
            specHash:
              type: string
            state:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: azure-service-operator/templates/generated/apiextensions.k8s.io_v1beta1_customresourcedefinition_virtualnetworks.azure.microsoft.com.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: virtualnetworks.azure.microsoft.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.provisioned
    name: Provisioned
    type: string
  - JSONPath: .status.message
    name: Message
    type: string
  group: azure.microsoft.com
  names:
    kind: VirtualNetwork
    listKind: VirtualNetworkList
    plural: virtualnetworks
    singular: virtualnetwork
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: VirtualNetwork is the Schema for the virtualnetworks API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: VirtualNetworkSpec defines the desired state of VirtualNetwork
          properties:
            addressSpace:
              type: string
            location:
              description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                Important: Run "make" to regenerate code after modifying this file'
              type: string
            resourceGroup:
              type: string
            subnets:
              items:
                description: VNetSubnets defines subnets for this vnet
                properties:
                  serviceEndpoints:
                    items:
                      type: string
                    type: array
                  subnetAddressPrefix:
                    type: string
                  subnetName:
                    description: 'INSERT ADDITIONAL STATUS FIELD - define observed
                      state of cluster Important: Run "make" to regenerate code after
                      modifying this file'
                    type: string
                required:
                - subnetAddressPrefix
                - subnetName
                type: object
              type: array
          required:
          - addressSpace
          - location
          - resourceGroup
          type: object
        status:
          description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
            state of resource actions
          properties:
            completed:
              format: date-time
              type: string
            containsUpdate:
              type: boolean
            failedProvisioning:
              type: boolean
            flattenedSecrets:
              type: boolean
            message:
              type: string
            pollingUrl:
              type: string
            provisioned:
              type: boolean
            provisioning:
              type: boolean
            requested:
              format: date-time
              type: string
            resourceId:
              type: string
            specHash:
              type: string
            state:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: azure-service-operator/templates/generated/rbac.authorization.k8s.io_v1_clusterrole_azureoperator-manager-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: azureoperator-manager-role
rules:
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - AzureSQLUsers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - AzureSQLUsers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - apimgmtapis
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - apimgmtapis/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - apimservices
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - apimservices/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - appinsights
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - appinsights/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - azureloadbalancers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - azureloadbalancers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - azurenetworkinterfaces
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - azurenetworkinterfaces/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - azurepublicipaddresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - azurepublicipaddresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - azuresqlactions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - azuresqlactions/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - azuresqldatabases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - azuresqldatabases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - azuresqlfailovergroups
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - azuresqlfailovergroups/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - azuresqlfirewallrules
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - azuresqlfirewallrules/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - azuresqlmanagedusers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - azuresqlmanagedusers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - azuresqlservers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - azuresqlservers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - azuresqlusers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - azuresqlvnetrules
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - azuresqlvnetrules/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - azurevirtualmachineextensions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - azurevirtualmachineextensions/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - azurevirtualmachines
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - azurevirtualmachines/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - azurevmscalesets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - azurevmscalesets/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - blobcontainers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - blobcontainers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - consumergroups
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - consumergroups/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - cosmosdbs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - cosmosdbs/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - eventhubnamespaces
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - eventhubnamespaces/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - eventhubs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - eventhubs/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - events
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - keyvaultkeys
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - keyvaultkeys/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - keyvaults
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - keyvaults/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - mysqldatabases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - mysqldatabases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - mysqlfirewallrules
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - mysqlfirewallrules/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - mysqlservers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - mysqlservers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - mysqlvnetrules
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - mysqlvnetrules/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - postgresqldatabases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - postgresqldatabases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - postgresqlfirewallrules
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - postgresqlfirewallrules/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - postgresqlservers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - postgresqlservers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - postgresqlvnetrules
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - postgresqlvnetrules/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - rediscacheactions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - rediscacheactions/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - rediscachefirewallrules
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - rediscachefirewallrules/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - rediscaches
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - rediscaches/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - resourcegroups
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - resourcegroups/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - storageaccounts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - storageaccounts/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - virtualnetworks
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - virtualnetworks/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: azure-service-operator/templates/generated/rbac.authorization.k8s.io_v1_clusterrole_azureoperator-proxy-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: azureoperator-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
# Source: azure-service-operator/templates/generated/rbac.authorization.k8s.io_v1_clusterrolebinding_azureoperator-manager-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: azureoperator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: azureoperator-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: azureoperator-system
---
# Source: azure-service-operator/templates/generated/rbac.authorization.k8s.io_v1_clusterrolebinding_azureoperator-proxy-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: azureoperator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: azureoperator-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: azureoperator-system
---
# Source: azure-service-operator/templates/generated/rbac.authorization.k8s.io_v1_role_azureoperator-leader-election-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: azureoperator-leader-election-role
  namespace: azureoperator-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
---
# Source: azure-service-operator/templates/generated/rbac.authorization.k8s.io_v1_rolebinding_azureoperator-leader-election-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: azureoperator-leader-election-rolebinding
  namespace: azureoperator-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: azureoperator-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: azureoperator-system
---
# Source: azure-service-operator/templates/generated/~g_v1_service_azureoperator-controller-manager-metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "8443"
    prometheus.io/scheme: https
    prometheus.io/scrape: "true"
  labels:
    control-plane: controller-manager
  name: azureoperator-controller-manager-metrics-service
  namespace: azureoperator-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
---
# Source: azure-service-operator/templates/generated/~g_v1_service_azureoperator-webhook-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: azureoperator-webhook-service
  namespace: azureoperator-system
spec:
  ports:
  - port: 443
    targetPort: 443
  selector:
    control-plane: controller-manager
---
# Source: azure-service-operator/templates/generated/apps_v1_deployment_azureoperator-controller-manager.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: azure-service-operator-v1
    control-plane: controller-manager
  name: azureoperator-controller-manager
  namespace: azureoperator-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        aadpodidbinding: aso_manager_binding
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - --metrics-addr=127.0.0.1:8080
        command:
        - /manager
        env:
        - name: AZURE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              key: AZURE_CLIENT_ID
              name: azureoperatorsettings
              optional: true
        - name: AZURE_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: AZURE_CLIENT_SECRET
              name: azureoperatorsettings
              optional: true
        - name: AZURE_TENANT_ID
          valueFrom:
            secretKeyRef:
              key: AZURE_TENANT_ID
              name: azureoperatorsettings
        - name: AZURE_SUBSCRIPTION_ID
          valueFrom:
            secretKeyRef:
              key: AZURE_SUBSCRIPTION_ID
              name: azureoperatorsettings
        - name: AZURE_USE_MI
          valueFrom:
            secretKeyRef:
              key: AZURE_USE_MI
              name: azureoperatorsettings
              optional: true
        - name: AZURE_OPERATOR_KEYVAULT
          valueFrom:
            secretKeyRef:
              key: AZURE_OPERATOR_KEYVAULT
              name: azureoperatorsettings
              optional: true
        - name: AZURE_CLOUD_ENV
          valueFrom:
            secretKeyRef:
              key: AZURE_CLOUD_ENV
              name: azureoperatorsettings
              optional: true
        - name: REQUEUE_AFTER
          value: "30"
        image: $acr.azurecr.io/k8s/azure-service-operator:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: liveness-port
          initialDelaySeconds: 30
          periodSeconds: 10
        name: manager
        ports:
        - containerPort: 443
          name: webhook-server
          protocol: TCP
        - containerPort: 8081
          name: liveness-port
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 200m
            memory: 256Mi
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
# Source: azure-service-operator/templates/generated/cert-manager.io_v1alpha2_certificate_azureoperator-serving-cert.yaml
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: azureoperator-serving-cert
  namespace: azureoperator-system
spec:
  dnsNames:
  - azureoperator-webhook-service.azureoperator-system.svc
  - azureoperator-webhook-service.azureoperator-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: azureoperator-selfsigned-issuer
  secretName: webhook-server-cert
---
# Source: azure-service-operator/templates/generated/cert-manager.io_v1alpha2_issuer_azureoperator-selfsigned-issuer.yaml
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  name: azureoperator-selfsigned-issuer
  namespace: azureoperator-system
spec:
  selfSigned: {}
