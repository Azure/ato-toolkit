input {
  tcp {
    port => {{ container.port }}
    mode => "server"
    ssl_enable => true
    ssl_key => "{{ ssl.key_path }}"
    ssl_cert => "{{ ssl.cert_path }}"
    ssl_certificate_authorities => ["{{ ssl.ca_path }}"]
    codec => plain
    ssl_verify => false
    dns_reverse_lookup_enabled => true
  }
}

filter {
  json {
    source => "message"
    target => "pks"
    skip_on_invalid_json => true
    remove_field => [ "message" ]
  }

  mutate {
    rename => { "[pks][kubernetes][labels][app]" => "[pks][kubernetes][labels][app.kubernetes.io/name]" }
  }

  mutate {
    add_field => { "pipeline_host" => "{{ inventory_hostname }}" }
  }
  if [message] {
    drop { }
  }
}

output {
  elasticsearch {
    hosts => ["https://{{ elasticsearch.lb_ip }}:{{ elasticsearch.port }}"]
    index => "{{ container.pipeline.index_pattern }}"
    ssl_certificate_verification => false
    user => "{{ container.pipeline.username }}"
    password => "{{ container.pipeline.password }}"
    ssl => true
  }
}