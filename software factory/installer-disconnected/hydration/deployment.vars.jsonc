{
    "azureConfig": {
        // az account show --id f420e201-a02b-4dd2-af6b-f4b5d46ebe27 -o json
        // Example: f420e201-a02b-4dd2-af6b-f4b5d46ebe27
        "tenantId": "",
        // Found: az account list
        // Example: f420e201-a02b-4dd2-af6b-f4b5d46ebe27
        "subscriptionId": "",
        // Add the file path to the NSS Root Cert here
        "azCliRootCert": "/foo/bar",
        // az account list-locations - Examples: eastus | westus | centralus
        "location": "eastus",
        // Possible Values: AzureCloud | AzureUSGovernment | [custom azure/stack config scheme](https://docs.microsoft.com/en-us/azure-stack/user/azure-stack-version-profiles-azurecli2?view=azs-2002#connect-to-azure-stack-hub)
        // "cloudName": "AzSec",
        "cloudName": "AzureCloud",
        // there can be no comments inside the cloud section for this to be successful/useful for the az cli
        "cloud": {
            "endpoints": {
                "activeDirectory": "https://login.microsoftonline.us",
                "activeDirectoryDataLakeResourceId": null,
                "activeDirectoryGraphResourceId": "https://graph.windows.net/",
                "activeDirectoryResourceId": "https://management.core.usgovcloudapi.net/",
                "appInsightsResourceId": "https://api.applicationinsights.us",
                "appInsightsTelemetryChannelResourceId": "https://dc.applicationinsights.us/v2/track",
                "batchResourceId": "https://batch.core.usgovcloudapi.net/",
                "gallery": "https://gallery.usgovcloudapi.net/",
                "logAnalyticsResourceId": "https://api.loganalytics.us",
                "management": "https://management.core.usgovcloudapi.net/",
                "mediaResourceId": "https://rest.media.usgovcloudapi.net",
                "microsoftGraphResourceId": "https://graph.microsoft.us/",
                "ossrdbmsResourceId": "https://ossrdbms-aad.database.usgovcloudapi.net",
                "resourceManager": "https://management.usgovcloudapi.net/",
                "sqlManagement": "https://management.core.usgovcloudapi.net:8443/",
                "vmImageAliasDoc": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/arm-compute/quickstart-templates/aliases.json"
            },
            "profile": "latest",
            "suffixes": {
                "acrLoginServerEndpoint": ".azurecr.us",
                "azureDatalakeAnalyticsCatalogAndJobEndpoint": null,
                "azureDatalakeStoreFileSystemEndpoint": null,
                "keyvaultDns": ".vault.usgovcloudapi.net",
                "mariadbServerEndpoint": ".mariadb.database.usgovcloudapi.net",
                "mysqlServerEndpoint": ".mysql.database.usgovcloudapi.net",
                "postgresqlServerEndpoint": ".postgres.database.usgovcloudapi.net",
                "sqlServerHostname": ".database.usgovcloudapi.net",
                "storageEndpoint": "core.usgovcloudapi.net",
                "storageSyncEndpoint": "afs.azure.us"
            }
        },
        // this name can be without the http:// but if so that value will be prepended
        "servicePrincipalName": "hydration",
        // this is the cert that will get created in the keyvault for login and then used
        // or if the file exists, will be used for login
        "spCertName": "sp-login",
        // the resource group the keyvault will be created in if it doesn't exist
        "spResouceGroup": "dsop-hydration",
        // the keyvault that the cert will created or retrieved from if it doesn't exist locally
        "spKeyvault": "dsop-hydrate-kv"
    }

    // "ocp311ClusterConfig": {
    //     // If ClusterType is private, creates private IP addresses on LBs
    //     // If ClusterType is public, creates public IP addresses on LBs
    //     "ClusterType": "private",
    //     "MasterClusterDns": {
    //         // Possible Values: default | custom
    //         "Type": "default",
    //         // Possible Values: nipio | custom
    //         // if Type = "default", RoutingSubDomainType = "nipio"
    //         // if Type = "custom", RoutingSubDomainType = "custom"
    //         "RoutingSubDomainType": "nipio",
    //         // If MasterClusterDnsType == "custom", then provide expected value below
    //         "AzureDns": "dev-openshift.com",
    //         // DNS entires will be: $MasterClusterDns.$AzureDns
    //         // ex: console.dev-openshift.com
    //         // ex: apps.dev-openshift.com
    //         "MasterClusterDns": "console",
    //         "RoutingDns": "apps"
    //     },
    //     "NetworkConfig": {
    //         "CreateVirtualNetwork": true,
    //         // Full vnet range CIDR notation - ex: 10.1.0.0/16
    //         "AddressPrefixes": "10.12.0.0/16",
    //         "VirtualNetworkName": "OcpVNet",
    //         "MasterInfraSubnetName": "MasterInfraSubnet",
    //         // Use CIDR notation - ex: 10.1.1.0/24
    //         "MasterInfraSubnetPrefix": "10.12.101.0/24",
    //         "NodeSubnetName": "NodeSubnet",
    //         // Use CIDR notation - ex: 10.1.2.0/24
    //         "NodeSubnetPrefix": "10.12.102.0/24",
    //         // Load balance IPs if ClusterConfig.CluusterType = "private"
    //         "MasterPrivateClusterIp": "10.12.101.100",
    //         "RouterPrivateClusterIp": "10.12.101.200"
    //     },
    //     "RoutingCert": {
    //         // Possible Values: selfsigned | custom
    //         "Type": "selfsigned",
    //         // if Type = "custom", then provide values here.
    //         // Files need to exist under .\certs\ folder
    //         // Extensions expected are: .ca-bundle & .crt & .key
    //         "CertCaFile": ".ca-bundle",
    //         "CertCrtFile": ".crt",
    //         "CertKeyFile": ".key"
    //     },
    //     "MasterCert": {
    //         // Possible Values: selfsigned | custom
    //         "Type": "selfsigned",
    //         // if Type = "custom", then provide values here.
    //         // Files need to exist under .\certs\ folder
    //         // Extensions expected are: .ca-bundle & .crt & .key
    //         "CertCaFile": ".ca-bundle",
    //         "CertCrtFile": ".crt",
    //         "CertKeyFile": ".key"
    //     },
    //     "OsImageType": "vhd",
    //     "MasterVmSize": "Standard_DS2_v2",
    //     "InfraVmSize": "Standard_DS4_v2",
    //     "NodeVmSize": "Standard_DS4_v2",
    //     "CnsVmSize": "Standard_DS4_v2"
    // },
    // "ProductLine": "FF",
    // "Environment": "BETA",
    // "RegionLocation": "EAST",

    // "BastionShortName": "BSTN",
    // "MasterShortName": "MSTR",
    // "NodeShortName": "NODE",
    // "InfraShortName": "INFA",
    // "CnsShortName": "CNS",
    // "ResourceGroupPostfix": "OCP-RG01",
    // "SetupBlobContainer": "filesbl",
    // "VhdName": "bravo-registry-osDisk.vhd",
    // "VhdDIskName": "rhelbase77.vhd",
    // "VhdImageName": "RHEL77",
    // "UploadVhd": true,
    // "EnableMetrics": true,
    // "EnableLogging": true,
    // "RhsmUsernameOrOrgId": "NotUsedInDisconnected",
    // "RhsmPoolId": "NotUsedInDisconnected",
    // "RhsmBrokerPoolId": "NotUsedInDisconnected",
    // "RhsmPasswordOrActivationKey": "NotUsedInDisconnected",
    // "MarketplacePublisher": "RedHat",
    // "MarketplaceOffer": "RHEL",
    // "MarketplaceSku": "7-RAW",
    // "MarketplaceVersion": "latest",
    // "StackDeployments": {
    //     "DomainName": "none",
    //     "EnableAzure": false
    // },
    // "SshKeyPath": "./certs/",
    // "AdminUsername": "ocpadmin",
    // "MasterInstanceCount": 3,
    // "InfraInstancCount": 3,
    // "NodeInstanceCount": 3,
    // "CnsInstanceCount": 4,
    // "DataDiskSize": 128,
    // "FaultDomainCount": 2,
    // "UpdateDomainCount": 0,
    // "Cns": {
    //     "Enabled": true,
    //     "CnsGlusterDiskSize": 256,
    //     "InternalEndpoint": "core.microsoft.scloud"
    // },
    // "DeploymentType": "Disconnected",
    // "OpenShiftMinorVersion": 157,
    // "UploadRepo": true,
    // "CreateRepo": true,
    // "GenerateSshKey": false,
    // "SanitizeLogs": false,
    // "SshKey": "###SSHKEYGEN###"
}
