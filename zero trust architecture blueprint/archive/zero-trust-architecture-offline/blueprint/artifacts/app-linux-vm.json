{
    "properties": {
        "template": {
            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "parameters": {
                "resourcePrefix": {
                    "type": "string",
                    "metadata": {
                        "displayName": "Resource Group and Resource identifier. String to be used as prefix to all Resource Group and Resource names."
                    }
                },
                "local-admin-username": {
                    "type": "string",
                    "defaultValue": "app-linux-admin-user",
                    "metadata": {
                        "displayName": "Linux admin username",
                        "description": "The username used to access the VM"
                    }
                },
                "authentication-type": {
                    "type": "string",
                    "metadata": {
                        "displayName": "Use password or ssh",
                        "description": "Choose whether the account will use username/password or SSH keys for authentication"
                    },
                    "defaultValue": "Password",
                    "allowedValues": [
                        "Password",
                        "SSH"
                    ]
                },
                "local-admin-ssh": {
                    "type": "string",
                    "defaultValue": "",
                    "metadata": {
                        "displayName": "Linux admin ssh key",
                        "description": "The public SSH Key."
                    }
                },
                "artifact-storage-account-uri": {
                    "type": "string",
                    "metadata": {
                        "displayName": "URI location of the STIG scripts",
                        "description": "URI to the location of the folder which contains /online/<stig-scripts> OR /offline/<stig-scripts>. This value must NOT include the trailing slash."
                    }
                },
                "logs-retention-in-days": {
                    "type": "int",
                    "defaultValue": 365,
                    "minValue": 0,
                    "maxValue": 365,
                    "metadata": {
                        "displayName": "Log retention in days",
                        "description": "Specifies the number of days that logs will be kept for; a value of 0 will retain data indefinitely"
                    }
                },
                "utcValue": {
                    "type": "string",
                    "defaultValue": "[utcNow()]"
                },
                "isOffline": {
                    "type": "bool",
                    "defaultValue": false
                },
                "noLogAnalytics": {
                    "type": "bool",
                    "defaultValue": true
                }
            },
            "variables": {
                "deployment-prefix": "[concat(parameters('resourcePrefix'), '-sharedsvcs')]",
                "extension-name": "app-linux",
                "virtualMachine-size": "Standard_F4s",
                "resource-prefix": "[concat(variables('deployment-prefix'), '-', variables('extension-name'))]",
                "oms-workspace-resourceGroup": "[concat(variables('deployment-prefix'), '-rg')]",
                "oms-workspace-name": "[concat(variables('deployment-prefix'), '-log')]",
                "vnet-resourceGroup": "[concat(variables('deployment-prefix'), '-rg')]",
                "vnet-name": "[concat(variables('deployment-prefix'), '-vnet')]",
                "app-linux-virtualMachine-name-prefix": "[concat(variables('resource-prefix'), '-vm')]",
                "app-linux-availabilitySet-name": "[concat(variables('resource-prefix'), '-as')]",
                "subnet-id": "[concat(resourceId(variables('vnet-resourceGroup'), 'Microsoft.Network/virtualNetworks',  variables('vnet-name')), '/subnets/', 'sharedsvcs')]",
                "networkWatcher-extension-name": "AzureNetworkWatcherExtension",
                "uniqueString": "[uniqueString(subscription().id, concat(variables('deployment-prefix'), '-log'))]",
                "diagnostic-storageAccount-prefix": "[concat(replace(variables('deployment-prefix'), '-', ''), 'diag')]",
                "diagnostic-storageAccount-name": "[toLower(substring(replace(concat(variables('diagnostic-storageAccount-prefix'), variables('uniqueString'), variables('uniqueString')), '-', ''), 0, 23) )]",
                "linuxOMSExtensionName": "MMAExtension",
                "linuxOMSExtensionPublisher": "Microsoft.EnterpriseCloud.Monitoring",
                "linuxOMSExtensionType": "OmsAgentForLinux",
                "linuxOMSExtensionTypeHandlerVersion": "1.7",
                "linuxAzurePolicy": "AzurePolicyforLinux",
                "linuxStigExtensionName": "LinuxStigExtension",
                "linuxDiskEncryptionExtensionName": "AzureDiskEncryptionForLinux",
                "linuxDiskEncryptionExtensionVersion": "1.1",
                "linuxEncryptionOperation": "EnableEncryption",
                "linuxKeyEncryptionAlgorithm": "RSA-OAEP",
                "linuxUseDiskEncryption": false,
                "linux-audit-remote-connection-with-no-pwd-config-name": "PasswordPolicy_msid110",
                "linux-audit-accounts-with-no-pwd-config-name": "PasswordPolicy_msid232",
                "linux-audit-etc-passwd-file-permission-set-to-0644-config-name": "PasswordPolicy_msid121",
                "folder-name": "[if(parameters('isOffline'), 'offline', 'online')]",
                "disa-stig-script": "rhel7.sh",
                "apply-stig-script": "apply-stigs.sh",
                "offline-archive": "offline-zta.tar.gz",
                "stig-files": [
                    "[concat(parameters('artifact-storage-account-uri'), '/', variables('folder-name'), '/', variables('disa-stig-script'))]",
                    "[concat(parameters('artifact-storage-account-uri'), '/', variables('folder-name'), '/', variables('apply-stig-script'))]"
                ],
                "archive-files": [
                    "[concat(parameters('artifact-storage-account-uri'), '/', variables('folder-name'), '/', variables('offline-archive'))]"
                ],
                "file-uris": "[if(parameters('isOffline'), union(variables('stig-files'), variables('archive-files')), variables('stig-files'))]"
            },
            "resources": [
                {
                    "type": "Microsoft.Compute/availabilitySets",
                    "apiVersion": "2019-07-01",
                    "location": "[resourceGroup().location]",
                    "name": "[variables('app-linux-availabilitySet-name')]",
                    "condition": "[not(parameters('isOffline'))]",
                    "properties": {
                        "platformFaultDomainCount": 2,
                        "platformUpdateDomainCount": 5
                    },
                    "sku": {
                        "name": "Aligned"
                    }
                },
                {
                    "type": "Microsoft.Network/networkInterfaces",
                    "apiVersion": "2019-07-01",
                    "location": "[resourceGroup().location]",
                    "name": "[concat(variables('app-linux-virtualMachine-name-prefix'), '-nic')]",
                    "condition": "[not(parameters('isOffline'))]",
                    "properties": {
                        "enableAcceleratedNetworking": true,
                        "ipConfigurations": [
                            {
                                "name": "ipconfig1",
                                "properties": {
                                    "privateIPAllocationMethod": "Dynamic",
                                    "subnet": {
                                        "id": "[variables('subnet-id')]"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "type": "Microsoft.Resources/deployments",
                    "apiVersion": "2019-09-01",
                    "name": "[variables('app-linux-virtualMachine-name-prefix')]",
                    "condition": "[not(parameters('isOffline'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/availabilitySets', variables('app-linux-availabilitySet-name'))]",
                        "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('app-linux-virtualMachine-name-prefix'), '-nic'))]"
                    ],
                    "properties": {
                        "mode": "Incremental",
                        "expressionEvaluationOptions": {
                            "scope": "inner"
                        },
                        "template": {
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                                "extension-name": {
                                    "type": "string"
                                },
                                "resource-prefix": {
                                    "type": "string"
                                },
                                "app-linux-virtualMachine-name-prefix": {
                                    "type": "string"
                                },
                                "app-linux-availabilitySet-name": {
                                    "type": "string"
                                },
                                "authentication-type": {
                                    "type": "string"
                                },
                                "local-admin-username": {
                                    "type": "string"
                                },
                                "virtualMachine-size": {
                                    "type": "string"
                                },
                                "uniqueString": {
                                    "type": "string"
                                },
                                "oms-workspace-resourceGroup": {
                                    "type": "string"
                                },
                                "diagnostic-storageAccount-name": {
                                    "type": "string"
                                },
                                "linux-admin-kv-password": {
                                    "type": "securestring"
                                },
                                "local-admin-ssh": {
                                    "type": "string"
                                }
                            },
                            "variables": {
                                "os-profile-ssh": {
                                    "disablePasswordAuthentication": true,
                                    "ssh": {
                                        "publicKeys": [
                                            {
                                                "path": "[concat('/home/', parameters('local-admin-username'), '/.ssh/authorized_keys')]",
                                                "keyData": "[parameters('local-admin-ssh')]"
                                            }
                                        ]
                                    }
                                }
                            },
                            "resources": [
                                {
                                    "type": "Microsoft.Compute/virtualMachines",
                                    "identity": {
                                        "type": "SystemAssigned"
                                    },
                                    "apiVersion": "2019-07-01",
                                    "location": "[resourceGroup().location]",
                                    "name": "[parameters('app-linux-virtualMachine-name-prefix')]",
                                    "properties": {
                                        "availabilitySet": {
                                            "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('app-linux-availabilitySet-name'))]"
                                        },
                                        "osProfile": {
                                            "computerName": "[concat(parameters('resource-prefix'), '-vm')]",
                                            "adminUsername": "[parameters('local-admin-username')]",
                                            "adminPassword": "[parameters('linux-admin-kv-password')]",
                                            "linuxConfiguration": "[if(equals(parameters('authentication-type'), 'Password'), json('null'), variables('os-profile-ssh'))]"
                                        },
                                        "hardwareProfile": {
                                            "vmSize": "[parameters('virtualMachine-size')]"
                                        },
                                        "storageProfile": {
                                            "imageReference": {
                                                "publisher": "OpenLogic",
                                                "offer": "CentOS",
                                                "sku": "7.7",
                                                "version": "latest"
                                            },
                                            "osDisk": {
                                                "name": "[replace(toLower(substring(concat(parameters('app-linux-virtualMachine-name-prefix'), '-osdisk', '-', replace(concat(parameters('uniqueString'), parameters('uniqueString')), '-', '')), 0, 40)), '-', '')]",
                                                "osType": "Linux",
                                                "createOption": "FromImage"
                                            },
                                            "dataDisks": [
                                                {
                                                    "lun": 0,
                                                    "name": "[replace(toLower(substring(concat(parameters('app-linux-virtualMachine-name-prefix'), '-datadisk', '-', replace(concat(parameters('uniqueString'), parameters('uniqueString')), '-', '')), 0, 40)), '-', '')]",
                                                    "diskSizeGB": 128,
                                                    "createOption": "Empty",
                                                    "caching": "ReadWrite",
                                                    "managedDisk": {
                                                        "storageAccountType": "Premium_LRS"
                                                    }
                                                }
                                            ]
                                        },
                                        "networkProfile": {
                                            "networkInterfaces": [
                                                {
                                                    "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('app-linux-virtualMachine-name-prefix'), '-nic'))]"
                                                }
                                            ]
                                        },
                                        "diagnosticsProfile": {
                                            "bootDiagnostics": {
                                                "enabled": true,
                                                "storageUri": "[concat(reference(resourceId(parameters('oms-workspace-resourceGroup'), 'Microsoft.Storage/storageAccounts/', parameters('diagnostic-storageAccount-name')), '2019-06-01').primaryEndpoints.blob)]"
                                            }
                                        }
                                    }
                                }
                            ]
                        },
                        "parameters": {
                            "extension-name": {
                                "value": "[variables('extension-name')]"
                            },
                            "resource-prefix": {
                                "value": "[variables('resource-prefix')]"
                            },
                            "app-linux-virtualMachine-name-prefix": {
                                "value": "[variables('app-linux-virtualMachine-name-prefix')]"
                            },
                            "app-linux-availabilitySet-name": {
                                "value": "[variables('app-linux-availabilitySet-name')]"
                            },
                            "authentication-type": {
                                "value": "[parameters('authentication-type')]"
                            },
                            "local-admin-username": {
                                "value": "[parameters('local-admin-username')]"
                            },
                            "virtualMachine-size": {
                                "value": "[variables('virtualMachine-size')]"
                            },
                            "uniqueString": {
                                "value": "[variables('uniqueString')]"
                            },
                            "oms-workspace-resourceGroup": {
                                "value": "[variables('oms-workspace-resourceGroup')]"
                            },
                            "diagnostic-storageAccount-name": {
                                "value": "[variables('diagnostic-storageAccount-name')]"
                            },
                            "linux-admin-kv-password": {
                                "reference": {
                                    "keyVault": {
                                        "id": "[resourceId('Microsoft.KeyVault/vaults', concat(variables('deployment-prefix'), '-kv'))]"
                                    },
                                    "secretName": "app-linux-admin-user-password"
                                }
                            },
                            "local-admin-ssh": {
                                "value": "[parameters('local-admin-ssh')]"
                            }
                        }
                    }
                },
                {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(variables('app-linux-virtualMachine-name-prefix'), '/', variables('networkWatcher-extension-name'))]",
                    "condition": "[not(parameters('isOffline'))]",
                    "apiVersion": "2019-07-01",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Resources/deployments', variables('app-linux-virtualMachine-name-prefix'))]"
                    ],
                    "properties": {
                        "autoUpgradeMinorVersion": true,
                        "publisher": "Microsoft.Azure.NetworkWatcher",
                        "type": "NetworkWatcherAgentLinux",
                        "typeHandlerVersion": "1.4"
                    }
                },
                {
                    "name": "[concat(variables('app-linux-virtualMachine-name-prefix'), '/', variables('linuxOMSExtensionName'))]",
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "apiVersion": "2019-07-01",
                    "location": "[resourceGroup().location]",
                    "condition": "[not(parameters('isOffline'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Resources/deployments', variables('app-linux-virtualMachine-name-prefix'))]"
                    ],
                    "properties": {
                        "publisher": "[variables('linuxOMSExtensionPublisher')]",
                        "type": "[variables('linuxOMSExtensionType')]",
                        "typeHandlerVersion": "[variables('linuxOMSExtensionTypeHandlerVersion')]",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "workspaceId": "[if(parameters('isOffline'), '', reference(resourceId(variables('oms-workspace-resourceGroup'), 'Microsoft.OperationalInsights/workspaces', variables('oms-workspace-name')), '2015-03-20').customerId)]",
                            "stopOnMultipleConnections": "true"
                        },
                        "protectedSettings": {
                            "workspaceKey": "[if(parameters('isOffline'), '', listKeys(resourceId(variables('oms-workspace-resourceGroup'), 'Microsoft.OperationalInsights/workspaces', variables('oms-workspace-name')), '2015-03-20').primarySharedKey)]"
                        }
                    }
                },
                {
                    "type": "Microsoft.Compute/virtualMachines/providers/diagnosticSettings",
                    "apiVersion": "2017-05-01-preview",
                    "name": "[concat(variables('app-linux-virtualMachine-name-prefix'), '/Microsoft.Insights/service')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[variables('app-linux-virtualMachine-name-prefix')]"
                    ],
                    "properties": {
                        "storageAccountId": "[resourceId(variables('oms-workspace-resourceGroup'), 'Microsoft.Storage/storageAccounts', variables('diagnostic-storageAccount-name'))]",
                        "workspaceId": "[if(parameters('noLogAnalytics'), json('null'), resourceId(variables('oms-workspace-resourceGroup'), 'Microsoft.OperationalInsights/workspaces', variables('oms-workspace-name')))]",
                        "metrics": [
                            {
                                "category": "AllMetrics",
                                "enabled": true,
                                "retentionPolicy": {
                                    "enabled": true,
                                    "days": "[parameters('logs-retention-in-days')]"
                                }
                            }
                        ],
                        "logs": []
                    }
                },
                {
                    "apiVersion": "2018-11-20",
                    "type": "Microsoft.Compute/virtualMachines/providers/guestConfigurationAssignments",
                    "name": "[concat(variables('app-linux-virtualMachine-name-prefix'), '/Microsoft.GuestConfiguration/', variables('linux-audit-remote-connection-with-no-pwd-config-name'))]",
                    "condition": "[not(parameters('isOffline'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Resources/deployments', variables('app-linux-virtualMachine-name-prefix'))]",
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('app-linux-virtualMachine-name-prefix'), variables('linuxOMSExtensionName'))]"
                    ],
                    "location": "[resourceGroup().location]",
                    "properties": {
                        "guestConfiguration": {
                            "name": "[variables('linux-audit-remote-connection-with-no-pwd-config-name')]",
                            "version": "1.*"
                        }
                    }
                },
                {
                    "apiVersion": "2018-11-20",
                    "type": "Microsoft.Compute/virtualMachines/providers/guestConfigurationAssignments",
                    "name": "[concat(variables('app-linux-virtualMachine-name-prefix'), '/Microsoft.GuestConfiguration/', variables('linux-audit-accounts-with-no-pwd-config-name'))]",
                    "condition": "[not(parameters('isOffline'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Resources/deployments', variables('app-linux-virtualMachine-name-prefix'))]",
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('app-linux-virtualMachine-name-prefix'), variables('linuxOMSExtensionName'))]"
                    ],
                    "location": "[resourceGroup().location]",
                    "properties": {
                        "guestConfiguration": {
                            "name": "[variables('linux-audit-accounts-with-no-pwd-config-name')]",
                            "version": "1.*"
                        }
                    }
                },
                {
                    "apiVersion": "2018-11-20",
                    "type": "Microsoft.Compute/virtualMachines/providers/guestConfigurationAssignments",
                    "name": "[concat(variables('app-linux-virtualMachine-name-prefix'), '/Microsoft.GuestConfiguration/', variables('linux-audit-etc-passwd-file-permission-set-to-0644-config-name'))]",
                    "condition": "[not(parameters('isOffline'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Resources/deployments', variables('app-linux-virtualMachine-name-prefix'))]",
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('app-linux-virtualMachine-name-prefix'), variables('linuxOMSExtensionName'))]"
                    ],
                    "location": "[resourceGroup().location]",
                    "properties": {
                        "guestConfiguration": {
                            "name": "[variables('linux-audit-etc-passwd-file-permission-set-to-0644-config-name')]",
                            "version": "1.*"
                        }
                    }
                },
                {
                    "apiVersion": "2019-07-01",
                    "name": "[concat(variables('app-linux-virtualMachine-name-prefix'), '/', variables('linuxAzurePolicy'))]",
                    "condition": "[not(parameters('isOffline'))]",
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Resources/deployments', variables('app-linux-virtualMachine-name-prefix'))]",
                        "[concat('Microsoft.Compute/virtualMachines/', variables('app-linux-virtualMachine-name-prefix'),'/providers/Microsoft.GuestConfiguration/guestConfigurationAssignments/',variables('linux-audit-remote-connection-with-no-pwd-config-name'))]",
                        "[concat('Microsoft.Compute/virtualMachines/', variables('app-linux-virtualMachine-name-prefix'),'/providers/Microsoft.GuestConfiguration/guestConfigurationAssignments/',variables('linux-audit-accounts-with-no-pwd-config-name'))]",
                        "[concat('Microsoft.Compute/virtualMachines/', variables('app-linux-virtualMachine-name-prefix'),'/providers/Microsoft.GuestConfiguration/guestConfigurationAssignments/',variables('linux-audit-etc-passwd-file-permission-set-to-0644-config-name'))]",
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions',variables('app-linux-virtualMachine-name-prefix'), variables('linuxOMSExtensionName'))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.GuestConfiguration",
                        "type": "ConfigurationforLinux",
                        "typeHandlerVersion": "1.0",
                        "autoUpgradeMinorVersion": true
                    }
                },
                {
                    "name": "[concat(variables('app-linux-virtualMachine-name-prefix'), '/', variables('linuxStigExtensionName'))]",
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "condition": "[not(parameters('isOffline'))]",
                    "location": "[resourceGroup().location]",
                    "apiVersion": "2019-07-01",
                    "tags": {
                        "displayName": "config-app"
                    },
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions/', variables('app-linux-virtualMachine-name-prefix'), variables('linuxAzurePolicy'))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Extensions",
                        "type": "CustomScript",
                        "typeHandlerVersion": "2.0",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "skipDos2Unix": true,
                            "timestamp": 123456789
                        },
                        "protectedSettings": {
                            "fileUris": "[variables('file-uris')]",
                            "commandToExecute": "[concat('bash ', variables('apply-stig-script'))]"
                        }
                    }
                },
                {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat('/', variables('app-linux-virtualMachine-name-prefix'), '/', variables('linuxDiskEncryptionExtensionName'))]",
                    "location": "[resourceGroup().location]",
                    "condition": "[and(variables('linuxUseDiskEncryption'), not(parameters('isOffline')))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions/', variables('app-linux-virtualMachine-name-prefix'), variables('linuxStigExtensionName'))]"
                    ],
                    "apiVersion": "2019-07-01",
                    "properties": {
                        "publisher": "Microsoft.Azure.Security",
                        "type": "[variables('linuxDiskEncryptionExtensionName')]",
                        "typeHandlerVersion": "[variables('linuxDiskEncryptionExtensionVersion')]",
                        "autoUpgradeMinorVersion": true,
                        "forceUpdateTag": "[parameters('utcValue')]",
                        "settings": {
                            "EncryptionOperation": "[variables('linuxEncryptionOperation')]",
                            "KeyVaultURL": "[reference(resourceId('Microsoft.KeyVault/vaults', concat(variables('deployment-prefix'), '-kv')), '2019-09-01').vaultUri]",
                            "KeyVaultResourceId": "[resourceId('Microsoft.KeyVault/vaults', concat(variables('deployment-prefix'), '-kv'))]",
                            "KeyEncryptionAlgorithm": "[variables('linuxKeyEncryptionAlgorithm')]",
                            "VolumeType": "All"
                        }
                    }
                }
            ],
            "outputs": {}
        },
        "parameters": {
            "resourcePrefix": {
                "value": "[parameters('resourcePrefix')]"
            },
            "local-admin-username": {
                "value": "[parameters('linuxapp_local-admin-username')]"
            },
            "authentication-type": {
                "value": "[parameters('linuxapp_authentication-type')]"
            },
            "local-admin-ssh": {
                "value": "[parameters('linuxapp_local-admin-ssh')]"
            },
            "artifact-storage-account-uri": {
                "value": "[parameters('artifact-storage-account-uri')]"
            },
            "logs-retention-in-days": {
                "value": "[parameters('linuxapp_logs-retention-in-days')]"
            }
        },
        "dependsOn": [
            "net",
            "keyvault"
        ],
        "resourceGroup": "ResourceGroup",
        "displayName": "Linux App Server template",
        "description": ""
    },
    "kind": "template",
    "id": "/providers/Microsoft.Blueprint/blueprints/bce24a0e-4bb8-45bd-b705-8493e0180a34/artifacts/app-linux-vm",
    "type": "Microsoft.Blueprint/blueprints/artifacts",
    "name": "app-linux-vm"
}